<?xml version="1.0" encoding="UTF-8"?>
<!-- ================================================ -->
<!--  Sample buildfile for jar components             -->
<!--                                                  -->
<!-- ================================================ -->
<project name="dbxtune" default="dist" basedir=".">
	<description>Build file for DbxTune</description>

	<!-- - - - - - - - - - - - - - - - - - - - -->
	<!-- set global properties for this build  -->
	<!-- - - - - - - - - - - - - - - - - - - - -->
	<property name="src"          location="src"/>
	<property name="build"        location="build"/>
	<property name="dist"         location="dist"/>
	<property name="launch4j.dir" location="c:/Program Files/Launch4j" />

	<path id="project.class.path">
		<fileset dir="lib"              includes="*.jar"/>
		<fileset dir="lib/jetty"        includes="*.jar"/>
		<fileset dir="lib/jdbc_drivers" includes="jconn4.jar"/>
		<fileset dir="lib/jdbc_drivers" includes="mssql-jdbc-13.2.0.jre8.jar"/>
<!--
		<pathelement location="lib/"/>
		<pathelement path="${java.class.path}/"/>
		<pathelement path="${additional.path}"/>
-->
	</path>

	<!-- - - - - - - - - - - - - - -->
	<!--  target: help             -->
	<!-- - - - - - - - - - - - - - -->
	<target name="help">
		<echo>Here is a couple of commands</echo>
		<echo>    ant -p                               --- List things that can be done</echo>
		<echo>    ant                                  --- just build a ZIP file</echo>
		<echo>    ant clean                            --- Remove various files</echo>
		<echo>    ant -Dpassword=theSecretPasswd push  --- build and pushes a build to gorans.org</echo>
	</target>


	<!-- - - - - - - - - - - - - - -->
	<!--  target: init             -->
	<!-- - - - - - - - - - - - - - -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp>
			<format property="DSTAMP" pattern="yyyy-MM-dd"/>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>
	</target>


	<!-- - - - - - - - - - - - - - -->
	<!--  target: build            -->
	<!-- - - - - - - - - - - - - - -->
	<target name="build" depends="init" description="--> compile and jar this component">

		<javac srcdir="${src.home}" destdir="${build.home}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
<!--			<classpath refid="compile.classpath" />-->
			<classpath refid="project.class.path"/>
		</javac>

		<jar destfile="${dist.home}/${app.name}.jar" basedir="${build.home}" excludes="**/*UT.class" />
	</target>

	<!-- - - - - - - - - - - - - - -->
	<!--  target: compile          -->
	<!-- - - - - - - - - - - - - - -->
	<target name="compile" depends="init" description="compile the source " >

		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>

		<!-- Compile the java code from ${src} into ${build} -->
		<javac source="11" target="11" srcdir="${src}" destdir="${build}" debug="on" includeantruntime="false">
			<classpath refid="project.class.path"/>
		</javac>

	</target>


	<!-- - - - - - - - - - - - - - -->
	<!--  target: dist             -->
	<!-- - - - - - - - - - - - - - -->
	<target name="dist" depends="compile" description="generate the distribution" >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/bin"/>
		<mkdir dir="${dist}/conf"/>
		<mkdir dir="${dist}/doc"/>
		<mkdir dir="${dist}/lib"/>
		<mkdir dir="${dist}/data"/>
		<mkdir dir="${dist}/classes"/>
		<mkdir dir="${dist}/resources"/>

<!--		<launch4j configFile="./launch4j.xml" />-->

		<copy file="README.txt"                                         toFile="${dist}/README.txt"/>
		<copy file="README_dbxcentral_install.txt"                      toFile="${dist}/README_dbxcentral_install.txt"/>
		<copy file="LICENCE.txt"                                        toFile="${dist}/LICENCE.txt"/>
		<copy file="COPYING"                                            toFile="${dist}/doc/COPYING"/>

		<copy file="bin/perfdemo.bat"                                   toFile="${dist}/bin/perfdemo.bat"/>

		<copy file="bin/sqlw.bat"                                       toFile="${dist}/bin/sqlw.bat"/>
		<copy file="bin/sqlw.sh"                                        toFile="${dist}/bin/sqlw.sh"/>

		<copy file="bin/tailw.bat"                                      toFile="${dist}/bin/tailw.bat"/>
		<copy file="bin/tailw.sh"                                       toFile="${dist}/bin/tailw.sh"/>
		<copy file="${src}/com/dbxtune/images/sqlw_splash.jpg"          toFile="${dist}/lib/sqlw_splash.jpg"/>
		<copy file="${src}/com/dbxtune/images/sql_query_window_32.png"  toFile="${dist}/lib/sqlw_icon_32.png"/>

		<copy file="bin/dbxtune.bat"                                    toFile="${dist}/bin/dbxtune.bat"/>
		<copy file="bin/dbxtune.sh"                                     toFile="${dist}/bin/dbxtune.sh"/>

		<copy file="bin/dbxcentral.bat"                                 toFile="${dist}/bin/dbxcentral.bat"/>
		<copy file="bin/dbxcentral.sh"                                  toFile="${dist}/bin/dbxcentral.sh"/>

		<copy file="bin/asetune.bat"                                    toFile="${dist}/bin/asetune.bat"/>
		<copy file="bin/asetune.sh"                                     toFile="${dist}/bin/asetune.sh"/>
		<copy file="${src}/com/dbxtune/images/asetune_splash.jpg"       toFile="${dist}/lib/asetune_splash.jpg"/>
		<copy file="${src}/com/dbxtune/images/asetune_icon_32.gif"      toFile="${dist}/lib/asetune_icon_32.gif"/>
		<copy file="${src}/com/dbxtune/images/asetune_icon_32.png"      toFile="${dist}/lib/asetune_icon_32.png"/>
		<copy file="conf/dbxtune.properties"                            toFile="${dist}/conf/dbxtune.properties"/>

		<copy file="doc/dbxtune-central.pptx"                           toFile="${dist}/doc/dbxtune-central.pptx"/>

		<!-- - - - - - - - - - - - - - -->
		<!-- Some files for DbxCental  -->
		<!-- - - - - - - - - - - - - - -->
		<copy file="bin/dbxc_list_ALL.sh"                               toFile="${dist}/bin/dbxc_list_ALL.sh"/>
		<copy file="bin/dbxc_start_ALL.sh"                              toFile="${dist}/bin/dbxc_start_ALL.sh"/>
		<copy file="bin/dbxc_stop_ALL.sh"                               toFile="${dist}/bin/dbxc_stop_ALL.sh"/>
		<copy file="bin/dbxPassword.sh"                                 toFile="${dist}/bin/dbxPassword.sh"/>

		<copy file="bin/dbxc_list_ALL.ps1"                               toFile="${dist}/bin/dbxc_list_ALL.ps1"/>
		<copy file="bin/dbxc_start_ALL.ps1"                              toFile="${dist}/bin/dbxc_start_ALL.ps1"/>
		<copy file="bin/dbxc_stop_ALL.ps1"                               toFile="${dist}/bin/dbxc_stop_ALL.ps1"/>
		<copy file="bin/dbxPassword.bat"                                 toFile="${dist}/bin/dbxPassword.bat"/>


		<!-- - - - - - - - - - - - - - -->
		<!-- And the rest of the tools that are still in beta... but put them in the bin directory -->
		<!-- - - - - - - - - - - - - - -->
		<copy file="bin/iqtune.bat"                                     toFile="${dist}/bin/iqtune.bat"/>
		<copy file="bin/iqtune.sh"                                      toFile="${dist}/bin/iqtune.sh"/>
		<copy file="${src}/com/dbxtune/images/iqtune_splash.jpg"        toFile="${dist}/lib/iqtune_splash.jpg"/>

		<copy file="bin/rstune.bat"                                     toFile="${dist}/bin/rstune.bat"/>
		<copy file="bin/rstune.sh"                                      toFile="${dist}/bin/rstune.sh"/>
		<copy file="${src}/com/dbxtune/images/rstune_splash.jpg"        toFile="${dist}/lib/rstune_splash.jpg"/>

		<copy file="bin/raxtune.bat"                                    toFile="${dist}/bin/raxtune.bat"/>
		<copy file="bin/raxtune.sh"                                     toFile="${dist}/bin/raxtune.sh"/>
		<copy file="${src}/com/dbxtune/images/raxtune_splash.jpg"       toFile="${dist}/lib/raxtune_splash.jpg"/>

		<copy file="bin/hanatune.bat"                                   toFile="${dist}/bin/hanatune.bat"/>
		<copy file="bin/hanatune.sh"                                    toFile="${dist}/bin/hanatune.sh"/>
		<copy file="${src}/com/dbxtune/images/hanatune_splash.jpg"      toFile="${dist}/lib/hanatune_splash.jpg"/>

		<copy file="bin/sqlservertune.bat"                              toFile="${dist}/bin/sqlservertune.bat"/>
		<copy file="bin/sqlservertune.sh"                               toFile="${dist}/bin/sqlservertune.sh"/>
		<copy file="${src}/com/dbxtune/images/sqlservertune_splash.jpg" toFile="${dist}/lib/sqlservertune_splash.jpg"/>

		<copy file="bin/oracletune.bat"                                 toFile="${dist}/bin/oracletune.bat"/>
		<copy file="bin/oracletune.sh"                                  toFile="${dist}/bin/oracletune.sh"/>
		<copy file="${src}/com/dbxtune/images/oracletune_splash.jpg"    toFile="${dist}/lib/oracletune_splash.jpg"/>

		<copy file="bin/postgrestune.bat"                               toFile="${dist}/bin/postgrestune.bat"/>
		<copy file="bin/postgrestune.sh"                                toFile="${dist}/bin/postgrestune.sh"/>
		<copy file="${src}/com/dbxtune/images/postgrestune_splash.jpg"  toFile="${dist}/lib/postgrestune_splash.jpg"/>

		<copy file="bin/mysqltune.bat"                                  toFile="${dist}/bin/mysqltune.bat"/>
		<copy file="bin/mysqltune.sh"                                   toFile="${dist}/bin/mysqltune.sh"/>
		<copy file="${src}/com/dbxtune/images/mysqltune_splash.jpg"     toFile="${dist}/lib/mysqltune_splash.jpg"/>

		<copy file="bin/db2tune.bat"                                    toFile="${dist}/bin/db2tune.bat"/>
		<copy file="bin/db2tune.sh"                                     toFile="${dist}/bin/db2tune.sh"/>
		<copy file="${src}/com/dbxtune/images/db2tune_splash.jpg"       toFile="${dist}/lib/db2tune_splash.jpg"/>


		<!-- - - - - - - - - - - - - - -->
		<!-- And some extra files -->
		<!-- - - - - - - - - - - - - - -->
		<copy file="${src}/com/dbxtune/history.html"                    toFile="${dist}/history.html"/>
		<copy todir="${dist}/lib">
			<fileset dir="lib">
				<include name="*.jar"/>
			</fileset>
		</copy>

		<copy todir="${dist}/lib/jetty">
			<fileset dir="lib/jetty"/>
		</copy>

		<copy todir="${dist}/lib/jdbc_drivers">
			<fileset dir="lib/jdbc_drivers"/>
		</copy>

		<copy todir="${dist}/lib/jaxb-ri">
			<fileset dir="lib/jaxb-ri"/>
		</copy>

		<copy todir="${dist}/resources">
			<fileset dir="resources"/>
		</copy>

		<!-- Put everything in ${build} into the dbxtune.jar file -->
		<jar destfile="${dist}/lib/dbxtune.jar">
			<fileset dir="${build}"/>
			<fileset dir="${src}" excludes="**/*.java"/>

			<manifest>
				<attribute name="Built-By"               value="${user.name}"/>
				<attribute name="Main-Class"             value="com.dbxtune.AseTune"/>
				<attribute name="Built-Date"             value="${TODAY}"/>
				<!--
				<attribute name="Implementation-Vendor"  value="Goran Schwarz"/>
				<attribute name="Implementation-Title"   value="DbxTune - Database Performance Monitor Tool"/>
				<attribute name="Implementation-Version" value="FIXME - ASA example: build 3152 J2SE"/>
				<attribute name="Implementation-Version" value="${version.num}-b${build.number}"/>
				<attribute name="Specification-Vendor"   value="Goran Schwarz"/>
				<attribute name="Specification-Title"    value="DbxTune - Database Performance Monitor Tool"/>
				<attribute name="Specification-Version"  value="FIXME - ASA example: 12.0.1"/>
				-->
			</manifest>
		</jar>



		<!-- - - - - - - - - - - - - - -->
		<!-- make a zip file dbxtune_${DSTAMP}.jar -->
		<!-- - - - - - - - - - - - - - -->
		<zip destfile="dbxtune_${DSTAMP}.zip"
			basedir="${dist}"
		/>

	</target>


	<!-- - - - - - - - - - - - - - -->
	<!--  target: push            -->
	<!-- - - - - - - - - - - - - - -->
	<target name="push" depends="init,clean,dist" description="Push a temporary drop" >
		<echo> ================================================================</echo>
		<echo> Note: specify password with: ant -Dpassword=theSecretPasswd push</echo>
		<echo> ----------------------------------------------------------------</echo>
		<!-- use: ant -Dpassword=xxx push -->
		<scp file="dbxtune_${DSTAMP}.zip" todir="gorans:${password}@gorans.org:www/dbxtune/tmp/" trust="true" />
		<!-- <scp file="dbxtune_${DSTAMP}.zip" todir="gorans@gorans.org:www/dbxtune/tmp/" keyfile="${user.home}/.ssh/id_dsa" /> -->

		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
		
		<!-- echo datetime -->
		<tstamp>
		  <format property="BUILD_DATE" pattern="yyyy-MM-dd HH:mm:ss.sss zzz" locale="en,UK"/>
		</tstamp>
		<echo>PUSH END TIME: ${BUILD_DATE}</echo>
	</target>


	<!-- - - - - - - - - - - - - - -->
	<!--  target: push2 (via 443 instead of 22) -->
	<!-- - - - - - - - - - - - - - -->
	<target name="push2" depends="init,clean,dist" description="Push a temporary drop" >
		<echo> ================================================================</echo>
		<echo> Note: specify password with: ant -Dpassword=theSecretPasswd push</echo>
		<echo> ----------------------------------------------------------------</echo>
		<!-- use: ant -Dpassword=xxx push -->
		<scp port="443" file="dbxtune_${DSTAMP}.zip" todir="gorans:${password}@gorans.org:www/dbxtune/tmp/" trust="true" />
		<!-- <scp file="dbxtune_${DSTAMP}.zip" todir="gorans@gorans.org:www/dbxtune/tmp/" keyfile="${user.home}/.ssh/id_dsa" /> -->

		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>

		<!-- echo datetime -->
		<tstamp>
		  <format property="BUILD_DATE" pattern="yyyy-MM-dd HH:mm:ss.sss zzz" locale="en,UK"/>
		</tstamp>
		<echo>PUSH END TIME: ${BUILD_DATE}</echo>
	</target>


	<!-- - - - - - - - - - - - - - -->
	<!--  target: clean            -->
	<!-- - - - - - - - - - - - - - -->
	<target name="clean" depends="init" description="clean up" >
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
		<delete>
			<fileset dir="." includes="dbxtune_*.zip"/> 
		</delete>
	</target>


	<!-- - - - - - - - - - - - - - -->
	<!--  target: exe              -->
	<!-- - - - - - - - - - - - - - -->
<!--
	<taskdef name="launch4j" 
		classname="net.sf.launch4j.ant.Launch4jTask"
		classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
	<target name="exe" description="Use launch4j to generate an EXE for DbxTune" depends="dist" >
		<launch4j configFile="./launch4j.xml" />
	</target>
-->

	
	<!-- - - - - - - - - - - - - - -->
	<!--  target: strip_svn        -->
	<!-- - - - - - - - - - - - - - -->
<!--
	<target name="strip_svn" description="Strip Subversion directories... WARNING..." >
		<delete includeemptydirs="true">
			<fileset dir="." includes="**/.svn" defaultexcludes="false"/>
		</delete>	
	</target>
-->
</project>

