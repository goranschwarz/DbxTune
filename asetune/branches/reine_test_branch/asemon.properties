#log4j.rootCategory=WARN

#log4j.category.asemon=DEBUG, console
#log4j.category.asemon=INFO, console
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=%d - %-5p - %-30c{1} - %m%n


#log4j.category.org.jfree=WARN, JfreeChartFile
#log4j.appender.JfreeChartFile=org.apache.log4j.FileAppender
#log4j.appender.JfreeChartFile.File=JfreeChart.log
#log4j.appender.JfreeChartFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.JfreeChartFile.layout.ConversionPattern=[%5p] %d %c - %m%n


QueryFrame.table.menu.01.name      = XXXX select * from master..sysprocesses where spid = ${SPID}
QueryFrame.table.menu.01.classname = asemon.xmenu.SQLWindow
QueryFrame.table.menu.01.config    = select * from master..sysprocesses where spid = ${SPID}
QueryFrame.table.menu.01.param.1   = SPID

2-Processes.table.menu.01.name      = YYYY select * from master..sysprocesses where spid = ${SPID}
2-Processes.table.menu.01.classname = asemon.xmenu.SQLWindow
2-Processes.table.menu.01.config    = select * from master..sysprocesses where spid = ${SPID}
2-Processes.table.menu.01.param.1   = SPID

CachedProcedures.table.menu.01.name      = Show Procedure Text ${DBName} ${ObjectName}
CachedProcedures.table.menu.01.classname = asemon.xmenu.ProcedureText
CachedProcedures.table.menu.01.param.1   = DBName
CachedProcedures.table.menu.01.param.2   = ObjectName

table.menu.00.name      = Capture SQL for ${KPID} (will be SPID in the future)
table.menu.00.classname = asemon.xmenu.CaptureSql
table.menu.00.param.1   = KPID

table.menu.01.name      = Show Procedure Text ${DBName} ${procName} ${linenum}
table.menu.01.classname = asemon.xmenu.ProcedureText
table.menu.01.param.1   = DBName
table.menu.01.param.2   = procName
table.menu.01.param.3   = linenum

table.menu.02.name      = Show Procedure call stack for ${SPID}
table.menu.02.classname = asemon.xmenu.ProcedureCallStack
table.menu.02.param.1   = SPID

table.menu.03.name      = optdiag: optdiag statistics ${DBName}..${ObjectName}
table.menu.03.classname = asemon.xmenu.AseOptDiag
table.menu.03.param.1   = DBName
table.menu.03.param.2   = ObjectName

table.menu.04.name      = sp_help: ${DBName}..sp_help ${ObjectName}
table.menu.04.classname = asemon.xmenu.SQLWindow
table.menu.04.config    = ${DBName}..sp_help ${ObjectName}
table.menu.04.param.1   = ObjectName
table.menu.04.param.2   = DBName

table.menu.05.name      = sp_helpindex: ${DBName}..sp_helpindex ${ObjectName}
table.menu.05.classname = asemon.xmenu.SQLWindow
table.menu.05.config    = ${DBName}..sp_helpindex ${ObjectName}
table.menu.05.param.1   = ObjectName
table.menu.05.param.2   = DBName

table.menu.06.name      = sp_spaceused: ${DBName}..sp_spaceused ${ObjectName}, 1
table.menu.06.classname = asemon.xmenu.SQLWindow
table.menu.06.config    = ${DBName}..sp_spaceused ${ObjectName}, 1
table.menu.06.param.1   = ObjectName
table.menu.06.param.2   = DBName

table.menu.07.name      = kill ${SPID}
table.menu.07.classname = asemon.xmenu.SQLWindow
table.menu.07.config    = kill ${SPID}
table.menu.07.param.1   = SPID

table.menu.08.name      = showplan ${SPID}
table.menu.08.classname = asemon.xmenu.SQLWindow
table.menu.08.config    = exec sp_showplan ${SPID}, null, null, null
table.menu.08.param.1   = SPID

table.menu.09.name      = dbcc sqltext(${SPID})
table.menu.09.classname = asemon.xmenu.SQLWindow
table.menu.09.config    = dbcc traceon(3604) dbcc sqltext(${SPID})
table.menu.09.param.1   = SPID

table.menu.10.name      = dbcc stacktrace(${SPID})
table.menu.10.classname = asemon.xmenu.SQLWindow
table.menu.10.config    = dbcc traceon(3604) dbcc stacktrace(${SPID})
table.menu.10.param.1   = SPID

table.menu.11.name      = select * from master..sysprocesses where spid = ${SPID}
table.menu.11.classname = asemon.xmenu.SQLWindow
table.menu.11.config    = select * from master..sysprocesses where spid = ${SPID}
table.menu.11.param.1   = SPID

table.menu.12.name      = select * from ${DBName}..sysobjects where type = 'U'
table.menu.12.classname = asemon.xmenu.SQLWindow
table.menu.12.config    = select * from ${DBName}..sysobjects where type = 'U'
table.menu.12.param.1   = DBName

#table.menu.13.name      = Find worktables in tempdb (depends on DBID)
#table.menu.13.classname = asemon.xmenu.SQLWindow
#table.menu.13.config    = select SPID=(hextoint('FFFF') - hextoint(substring(biginttohex(4294967296 + PartitionID),9,4))),* from master..monCachedObject where DBID = ${DBID} and PartitionID < 0
#table.menu.13.param.1   = DBID

//		// Setup HARDCODED, configuration for LOG4J
//		// ... using config file now instead...
//		//		Properties log4jProps = new Properties();
//		//		//log4jProps.setProperty("log4j.rootLogger", "INFO, A1");
//		//		log4jProps.setProperty("log4j.rootLogger", "DEBUG, A1");
//		//		log4jProps.setProperty("log4j.appender.A1", "org.apache.log4j.ConsoleAppender");
//		//		log4jProps.setProperty("log4j.appender.A1.layout", "org.apache.log4j.PatternLayout");
//		//		log4jProps.setProperty("log4j.appender.A1.layout.ConversionPattern", "%d - %-5p - %-30c{1} - %m%n");
//		//		PropertyConfigurator.configure(log4jProps);


#log4j.logger.asemon=DEBUG
#log4j.logger.org.jfree=DEBUG
#log4j.logger.asemon.xmenu.TablePopupFactory=DEBUG


#log4j.rootLogger=INFO, logfile
##log4j.category.asemon=DEBUG, logfile
#log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#log4j.appender.logfile.File=c:/asemon.log
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logfile.layout.ConversionPattern=%d - %-5p - %-30c{1} - %m%n
#log4j.appender.logfile.MaxFileSize=100KB
#log4j.appender.logfile.MaxBackupIndex=1

#log4j.logger.org.jfree=WARN
#log4j.logger.asemon.Asemon=DEBUG
#log4j.logger.asemon.RefreshProcess=DEBUG
#log4j.logger.asemon.ProcessDetailFrame=DEBUG
#log4j.logger.asemon.GetCounters=DEBUG
#log4j.logger.asemon.CountersModel=DEBUG
#log4j.logger.asemon.MainFrame=DEBUG
#log4j.logger.asemon.OpenConnectionDlg=DEBUG
#log4j.logger.asemon.TrendGraph=DEBUG
#log4j.logger.asemon.check.CheckForUpdates=TRACE

SamplingCnt.negativeDiffCountersToZero = false
TrendGraph.showToolTip = true

# UDC - User Defined Counters
#-----------------------------------------------------------
# Go and get information about you'r own thing
# Normally used to get a some application specific counters
# If it's a "load" application how many XXX have we loaded so far
#-----------------------------------------------------------
#udc.appSpecificCounter.name=App1 loading
#udc.appSpecificCounter.sql=select appName, loadCount=count(*) from appTable
#udc.appSpecificCounter.pkPos=1
#udc.appSpecificCounter.diff=loadCount


#-----------------------------------------------------------
# Here is a example where we are not satisfied with the current ASEmon counters
# so lets make "a new and improved" tab.
#
# In this example we are also using ASE version dependensies
# meaning newer versions of the ASE server might have "extra" columns in there MDA tables
#
#
# Here is a example where we are not satisfied with the current ASEmon counters
# so lets make "a new and improved" tab.
#
# In this example we are also using ASE version dependensies
# meaning newer versions of the ASE server might have "extra" columns in there MDA tables
#-----------------------------------------------------------
#udc.procAcct.name=EXTRA PROCESS ACTIVITY
#udc.procAcct.sql=      select SPID, KPID, CPUTime, LogicalReads, PhysicalReads       from monProcessActivity
#udc.procAcct.sql.12510=select SPID, KPID, CPUTime, LogicalReads, PhysicalReads, WaitTime       from monProcessActivity
#udc.procAcct.sql.12520=select SPID, KPID, CPUTime, LogicalReads, PhysicalReads, WaitTime, PagesRead       from monProcessActivity
#udc.procAcct.sql.12530=select SPID, KPID, CPUTime, LogicalReads, PhysicalReads, WaitTime, PagesRead, PhysicalWrites, PagesWritten       from monProcessActivity
#udc.procAcct.sql.12540=select SPID, KPID, CPUTime, LogicalReads, PhysicalReads, WaitTime, PagesRead, PhysicalWrites, PagesWritten, MemUsageKB       from monProcessActivity
#udc.procAcct.sql.15010=select SPID, KPID, CPUTime, LogicalReads, PhysicalReads, WaitTime, PagesRead, PhysicalWrites, PagesWritten, MemUsageKB, NewCol1=getdate()       from monProcessActivity
#udc.procAcct.sql.15020=select SPID, KPID, CPUTime, LogicalReads, PhysicalReads, WaitTime, PagesRead, PhysicalWrites, PagesWritten, MemUsageKB, NewCol1=getdate(), AndAotherNewCol=getdate()       from monProcessActivity
#udc.procAcct.pkPos=1, 2 
#udc.procAcct.diff=PhysicalReads, LogicalReads, PagesRead, PhysicalWrites, PagesWritten
#udc.procAcct.toolTipMonTables=monProcessActivity

#udc.databases.name=Databases
#udc.databases.sql=select DBName, DBID, AppendLogRequests, AppendLogWaits, TransactionLogFull, SuspendedProcesses, BackupInProgress, LastBackupFailed, BackupStartTime, QuiesceTag from monOpenDatabases order by DBName
#udc.databases.pkPos=1
#udc.databases.diff=AppendLogRequests, AppendLogWaits
#udc.databases.toolTipMonTables=monOpenDatabases
#udc.databases.pk=DBName

#udc.rowcount1.name=RowCount
#udc.rowcount1.sql= \
#if ((select db_id('csmain')) is not null) exec("select 'ObjectName' = 'csmain.Subscriber', Cnt = count(*) from csmain..Subscriber union all select 'ObjectName' = 'csstat.TransactionDetail', Cnt = count(*) from csacch..TransactionDetail") \
#if ((select db_id('csstat')) is not null) exec("select 'ObjectName' = 'csstat.Subscriber', Cnt = count(*) from csstat..Subscriber union all select 'ObjectName' = 'csstat.RechargeDetail',    Cnt = count(*) from csstat..RechargeDetail") \
#
#udc.rowcount1.pkPos=1
#udc.rowcount1.diff=Cnt

#udc.rowcount1.name=RowCount
#udc.rowcount1.sql= \
#if ((select db_id('csmain')) is not null) exec("select 'ObjectName' = 'csmain.Subscriber', Cnt = count(*) from csmain..Subscriber") \
#if ((select db_id('csstat')) is not null) exec("select 'ObjectName' = 'csstat.Subscriber', Cnt = count(*) from csstat..Subscriber") \
#udc.rowcount1.pkPos=1
#udc.rowcount1.diff=Cnt



#udc.rowcount1.name=RowCount
#udc.rowcount1.sql= \
#       declare @objid int, @sql varchar(4096), @dbname varchar(30), @tabname varchar(30) \
#       if not exists ( select * from tempdb..sysobjects where type = 'U' and name = 'asemonRowCount') exec("create table tempdb.guest.asemonRowCount (spid int, ObjectName varchar(60), Cnt int)") \
#   select @dbname = 'csstat', @tabname = 'Subscriber'         select @sql = "select @objid = id from "+@dbname+"..sysobjects where name = '"+@tabname+"' insert into tempdb.guest.asemonRowCount select @@spid, '"+@dbname+"."+@tabname+"', row_count(db_id('"+@dbname+"'), @objid)"     if ((select db_id(@dbname)) is not null) exec(@sql) \
#   select @dbname = 'csstat', @tabname = 'RechargeDetail'     select @sql = "select @objid = id from "+@dbname+"..sysobjects where name = '"+@tabname+"' insert into tempdb.guest.asemonRowCount select @@spid, '"+@dbname+"."+@tabname+"', row_count(db_id('"+@dbname+"'), @objid)"     if ((select db_id(@dbname)) is not null) exec(@sql) \
#   select @dbname = 'csmain', @tabname = 'Subscriber'         select @sql = "select @objid = id from "+@dbname+"..sysobjects where name = '"+@tabname+"' insert into tempdb.guest.asemonRowCount select @@spid, '"+@dbname+"."+@tabname+"', row_count(db_id('"+@dbname+"'), @objid)"     if ((select db_id(@dbname)) is not null) exec(@sql) \
#   select @dbname = 'csacch', @tabname = 'TransactionDetail'  select @sql = "select @objid = id from "+@dbname+"..sysobjects where name = '"+@tabname+"' insert into tempdb.guest.asemonRowCount select @@spid, '"+@dbname+"."+@tabname+"', row_count(db_id('"+@dbname+"'), @objid)"     if ((select db_id(@dbname)) is not null) exec(@sql) \
#       exec("select ObjectName, Cnt from tempdb.guest.asemonRowCount where spid = @@spid")    exec("delete from tempdb.guest.asemonRowCount where spid = @@spid") 
#udc.rowcount1.pkPos=1
#udc.rowcount1.diff=Cnt


udc.rowcountX.name=RowCount
udc.rowcountX.sql= \
select dbname='sybsystemprocs', tabname='sysobjects', cnt=row_count(db_id('sybsystemprocs'), object_id('sysobjects')) \
select dbname='master',         tabname='sysobjects', cnt=row_count(db_id('master'),         object_id('sysobjects')) \
select dbname='tempdb',         tabname='sysobjects', cnt=row_count(db_id('tempdb'),         object_id('sysobjects')) \


#udc.rowcountX.pkPos=1,2
udc.rowcountX.diff=cnt
udc.rowcountX.pk=dbname,tabname


#udc.rowcount1.name=RowCount
#udc.rowcount1.sql= exec asemonRowCount
##udc.rowcount1.pkPos=1,2
#udc.rowcount1.diff=cnt
#udc.rowcount1.pk=dbname,objectName
#udc.rowcount1.graph              = true
#udc.rowcount1.graph.name         = RowCountGraph
#udc.rowcount1.graph.label        = Actual Number of rows in various tables 
#udc.rowcount1.graph.menuLabel    = RowCount xxxx
#udc.rowcount1.graph.data.cols    = cnt
#udc.rowcount1.graph.data.methods = absAvg
#udc.rowcount1.graph.data.labels  = rowcount

#udc.FreeLog.name=FreeLog
#udc.FreeLog.sql=select dbname='tempdb_stmgr', freeKb=(lct_admin('logsegment_freepages', db_id('tempdb_stmgr')) - lct_admin('reserved_for_rollbacks', db_id('tempdb_stmgr')) - (@@thresh_hysteresis * 2))/512
#udc.FreeLog.diff=freeKb
#udc.FreeLog.pk=dbname
#udc.FreeLog.graph              = true
#udc.FreeLog.graph.name         = FreeLog
#udc.FreeLog.graph.label        = FreeKb in db
#udc.FreeLog.graph.menuLabel    = FreeLog xxxx
#udc.FreeLog.graph.data.cols    = freeKb
#udc.FreeLog.graph.data.methods = absAvg
#udc.FreeLog.graph.data.labels  = FreeKb

udc.lockwait.name=LockWait
udc.lockwait.sql=select SPID, KPID, WaitEventID, Waits, WaitTime from monProcessWaits where WaitEventID = 150
#udc.lockwait.pkPos=1,2
udc.lockwait.diff=Waits, WaitTime
udc.lockwait.toolTipMonTables=monProcessWaits
udc.lockwait.pk=SPID

udc.SPIDWaits.name=SPIDWaits
udc.SPIDWaits.sql=select w.SPID, w.KPID, ei.WaitClassID, w.WaitEventID, w.Waits, w.WaitTime, ClassIdDescription = ci.Description, EventIdDescription = ei.Description \
    from monProcessWaits w, monWaitEventInfo ei, monWaitClassInfo ci \
    where w.WaitEventID = ei.WaitEventID \
      and ei.WaitClassID = ci.WaitClassID \
      and w.WaitEventID not in(19,57,61,250,251)
#udc.SPIDWaits.pkPos=1,2,3
udc.SPIDWaits.diff=Waits, WaitTime
udc.SPIDWaits.toolTipMonTables=monProcessWaits
udc.SPIDWaits.pk=SPID, KPID, WaitEventID


udc.SumSPIDWaits.name=SumSPIDWaits
udc.SumSPIDWaits.sql=select w.WaitEventID, Waits=sum(convert(int,w.Waits)), WaitTimeInMs=sum(convert(int,w.WaitTime)), EventIdDescription = (select ei.Description from monWaitEventInfo ei where ei.WaitEventID = w.WaitEventID) from monProcessWaits w where w.WaitEventID not in(19,57,61,250,251) group by w.WaitEventID
#udc.SumSPIDWaits.pkPos=1
udc.SumSPIDWaits.diff=Waits, WaitTimeInMs
udc.SumSPIDWaits.pk=WaitEventID

udc.SumSPIDWaitsInSec.name=SumSPIDWaitsInSec
udc.SumSPIDWaitsInSec.sql=select w.WaitEventID, Waits=convert(int,sum(w.Waits/1000.0)), WaitTimeInSec=convert(int,sum(w.WaitTime/1000.0)), EventIdDescription = (select ei.Description from monWaitEventInfo ei where ei.WaitEventID = w.WaitEventID) from monProcessWaits w group by w.WaitEventID
#udc.SumSPIDWaitsInSec.pkPos=1
udc.SumSPIDWaitsInSec.diff=Waits, WaitTimeInSec
udc.SumSPIDWaitsInSec.pk=WaitEventID



udc.monProcessObject.name=ProcessObject
udc.monProcessObject.sql=select SPID, KPID, ObjectType, DBName, ObjectName, IndexID, PartitionName, PartitionSize, OwnerUserID, LogicalReads, PhysicalReads, PhysicalAPFReads, DBID, ObjectID, PartitionID from monProcessObject where SPID != @@spid
#udc.monProcessObject.pkPos=2, 5, 6
udc.monProcessObject.diff=LogicalReads, PhysicalReads, PhysicalAPFReads
udc.monProcessObject.toolTipMonTables=monProcessObject
udc.monProcessObject.pk=KPID, ObjectName, IndexID, PartitionName

#udc.monProcedureCache.name=ProcCache
#udc.monProcedureCache.sql=select dummyID=1, Requests, Loads, Writes, Stalls from monProcedureCache
##udc.monProcedureCache.pkPos=1
#udc.monProcedureCache.diff=Requests, Loads, Writes, Stalls
#udc.monProcedureCache.toolTipMonTables=monProcedureCache
#udc.monProcedureCache.pk=dummyID


udc.sysMon.name=sysMon
udc.sysMon.sqlInit=dbcc traceon(3604,8399)          dbcc monitor('select','all','on')
udc.sysMon.sql=dbcc monitor('sample','all','on')    select group_name, field_name, field_id, value from master..sysmonitors where group_name not like 'spinlock%'
udc.sysMon.diff=value
udc.sysMon.pk=group_name, field_name, field_id

#udc.sysMonSpinlock.name=sysMonSpinlock
#udc.sysMonSpinlock.sqlInit=dbcc traceon(3604,8399)                 dbcc monitor('select','spinlock_s','on')
#udc.sysMonSpinlock.sql=dbcc monitor('sample','spinlock_s','on')    select group_name, field_name, field_id, value from master..sysmonitors where group_name like 'spinlock%'
#udc.sysMonSpinlock.diff=value
#udc.sysMonSpinlock.pk=group_name, field_name, field_id

udc.sysMonSpinlock.name=sysMonSpinlock
udc.sysMonSpinlock.sqlInit=\
	DBCC traceon(3604,8399) \
	DBCC monitor('select','all','on') \
	DBCC monitor('select','spinlock_s','on')
udc.sysMonSpinlock.sql=\
	DBCC monitor('sample','all','on') \
	DBCC monitor('sample','spinlock_s','on') \
	SELECT  \
		P.field_name as name, \
		P.field_id   as id, \
		P.value      as grabs, \
		W.value      as waits, \
		S.value      as spins \
	from master..sysmonitors P, master..sysmonitors W, master..sysmonitors S \
	where P.group_name = 'spinlock_p_0' \
	  and W.group_name = 'spinlock_w_0' \
	  and S.group_name = 'spinlock_s_0' \
	  and P.field_id = W.field_id \
	  and P.field_id = S.field_id
udc.sysMonSpinlock.diff=grabs, waits, spins
udc.sysMonSpinlock.pk=name, id

udc.sysMonSpinSUM.name=sysMonSpinSUM
udc.sysMonSpinSUM.sqlInit=\
	DBCC traceon(3604,8399) \
	DBCC monitor('select','all','on') \
	DBCC monitor('select','spinlock_s','on')
udc.sysMonSpinSUM.sql=\
	DBCC monitor('sample','all','on') \
	DBCC monitor('sample','spinlock_s','on') \
	SELECT  \
		name        = convert(varchar(40), P.field_name), \
		instances   = count(P.field_id), \
		grabs       = sum(convert(bigint,P.value)), \
		waits       = sum(convert(bigint,W.value)), \
		spins       = sum(convert(bigint,S.value)), \
		contention  = convert(numeric(4,1),0.0), \
		description = convert(varchar(100), '') \
	from master..sysmonitors P, master..sysmonitors W, master..sysmonitors S \
	where P.group_name = 'spinlock_p_0' \
	  and W.group_name = 'spinlock_w_0' \
	  and S.group_name = 'spinlock_s_0' \
	  and P.field_id = W.field_id \
	  and P.field_id = S.field_id \
	group by P.field_name \
	order by 1
udc.sysMonSpinSUM.diff=grabs, waits, spins
udc.sysMonSpinSUM.pk=name


log4j.logger.org.jfree=DEBUG

#--------------------------------------------
# no-gui
#--------------------------------------------
nogui.conn.username = sa
nogui.conn.password = null
nogui.conn.server   = GORANS_1_DS

#--------------------------------------------
# Persistent storage
#--------------------------------------------
#PersistentCounterHandler.WriterClass=asemon.pcs.PersistWriterJdbc, asemon.pcs.PersistWriterToBcpFiles
PersistentCounterHandler.WriterClass=asemon.pcs.PersistWriterJdbc
#PersistentCounterHandler.WriterClass=asemon.pcs.PersistWriterToBcpFiles

PersistWriterJdbc.jdbcDriver  = org.h2.Driver
PersistWriterJdbc.jdbcUrl     = jdbc:h2:pcdb_gorans
PersistWriterJdbc.jdbcUser    = sa
PersistWriterJdbc.jdbcPasswd  = null

#PersistWriterJdbc.jdbcDriver  = com.sybase.jdbc3.jdbc.SybDriver
#PersistWriterJdbc.jdbcUrl     = jdbc:sybase:Tds:goransxp:5000/pcdb_gorans
#PersistWriterJdbc.jdbcUser    = sa
#PersistWriterJdbc.jdbcPasswd  = null

PersistWriterToBcpFiles.moveFilesAfterXSeconds=30
#PersistWriterToBcpFiles.moveFilesOsCmd=echo 
#PersistWriterToBcpFiles.ddlFilesOsCmd=echo

