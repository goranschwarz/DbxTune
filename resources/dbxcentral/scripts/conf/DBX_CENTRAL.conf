
## Only do H2 DEFRAG once a day: at 04:00 in the night
CentralH2Defrag.cron = 0 4 * * *


##=====================================================
## BEGIN: Alarms specific
##-----------------------------------------------------
#AlarmHandler.WriterClass = com.dbxtune.alarm.writers.AlarmWriterToFile, com.dbxtune.alarm.writers.AlarmWriterToMail
#AlarmHandler.enable      = true

## TO FILE
#AlarmWriterToFile.active.filename = ${HOME}/.dbxtune/dbxc/log/ALARM.ACTIVE.DbxCentral.txt
#AlarmWriterToFile.log.filename    = ${HOME}/.dbxtune/dbxc/log/ALARM.LOG.DbxCentral.log

## TO MAIL
#AlarmWriterToMail.from=some_name@acme.com
#AlarmWriterToMail.smtp.hostname=smtp.acme.com
#AlarmWriterToMail.smtp.username=some_name@acme.com
#AlarmWriterToMail.smtp.password=encrypted\:X1d8pOVxPfHYVUByguR6/w\=\=
#AlarmWriterToMail.to=some_receiver@acme.com
##-----------------------------------------------------
## END: Alarms specific
##=====================================================


##
## Max size for H2 historical recordings
##
## If DbxCentral and the DbxTune collectors are co-located on the same host, and we want to specify how many GB the DbxTune recordings can use
## You can use the below option!
## Default algorithm for deleting old recordings are:
##  - when we start to run out of space, then delete oldest recordings. (we need to have space for 2 days of recordings)
##
#DataDirectoryCleaner.max.historical.space.usage.GB=500


##=====================================================
## BEGIN: Local OS Monitoring of DbxCentral host
## info: entry '!* 0 * * *' means: Alarms is NOT allowed 'at 0 hour'.
##-----------------------------------------------------
#CmOsUptime.alarm.system.enabled.adjLoadAverage_1Min.timeRange.cron  = !* 0 * * *
#CmOsUptime.alarm.system.enabled.adjLoadAverage_5Min.timeRange.cron  = !* 0 * * *
#CmOsUptime.alarm.system.enabled.adjLoadAverage_15Min.timeRange.cron = !* 0 * * *
#CmOsVmstat.alarm.system.enabled.swappInOut.timeRange.cron           = !* 0 * * *
#CmOsMeminfo.alarm.system.enabled.swapping.timeRange.cron            = !* 0 * * *
##-----------------------------------------------------
## END: Local OS Monitoring of DbxCentral host
##=====================================================


##=====================================================
## BEGIN: DSR -- Daily Summary Report (for DbxCentral Local OS Monitoring)
##-----------------------------------------------------
DailySummaryReport.create = true

## What "sender" should we use to send the DSR
#DailySummaryReport.sender.classname = com.dbxtune.pcs.report.senders.ReportSenderToMail

## At what time should the report be created!
#CentralDailyReportSender.cron       = 57 23 * * *

## Properties for the Mail sender...
ReportSenderToMail.smtp.hostname = smtp.acme.com
ReportSenderToMail.from          = dbxtune@acme.com
ReportSenderToMail.to            = some.receiver@acme.com

#ReportSenderToMail.start.tls     = true
#ReportSenderToMail.smtp.port     = 587
#ReportSenderToMail.smtp.username = dbxtune@acme.com
#ReportSenderToMail.smtp.password = someSecretPassword
##-----------------------------------------------------
## END: DSR -- Daily Summary Report (for DbxCentral Local OS Monitoring)
##=====================================================



##======================================================
## BEGIN: PCS - Persistent Counter Storage
##-----------------------------------------------------
## What classes should be used to by the PCS
CentralPcsWriterHandler.WriterClass = com.dbxtune.central.pcs.CentralPersistWriterJdbc

CentralPersistWriterJdbc.driver   = org.h2.Driver
CentralPersistWriterJdbc.url      = jdbc:h2:file:${DBXTUNE_SAVE_DIR}/DBXTUNE_CENTRAL_DB
CentralPersistWriterJdbc.username = sa
CentralPersistWriterJdbc.password = 

## Special flag... which disables inserts to table '<schema>.DbxSessionSampleDetailes'
CentralPersistWriterJdbc.save.SESSION_SAMPLE_DETAILS=false

## What alarm events should be stored in the PCS (possible values are: RE-RAISE, RAISE, CANCEL)
CentralPersistWriterJdbc.alarm.events.store = RAISE, CANCEL

## -1 = disabled
CentralPersistWriterJdbc.h2.auto.defrag.time = -1

## Print warning message if the queue size gets bigger that ## entries (The writers takes to long to persist information)
CentralPcsWriterHandler.warnQueueSizeThresh = 2

## Special H2 options
#dbxtune.h2.REUSE_SPACE    = FALSE
#dbxtune.h2.RETENTION_TIME = 600000

##-----------------------------------------------------
## END: PCS - Persistent Counter Storage
##=====================================================




##=====================================================
## BEGIN: Cleanup
##-----------------------------------------------------

##-----------------------------------------------------
## H2 Database file cleanup
##-----------------------------------------------------
DataDirectoryCleaner.start = true

## like normal Unix crontab - 23:54 every day
DataDirectoryCleaner.cron = 54 23 * * *

## How many days should we factor for when we check for space for the next day 
## algorithm is: spaceNeeded = "maxSize for YYYY-MM-DD group" * multiply.factor
#DataDirectoryCleaner.multiply.factor = 2.0

## Print current space usage for all files in "YYYY-MM-DD group" and "ServerName group"
DataDirectoryCleaner.print.space.info = true

## Special log file pattern (J4Log pattern)
DataDirectoryCleaner.log.file.pattern = %d - %-5p - %m%n

## If you want to test (set this to true)... deletes will NOT be done...
DataDirectoryCleaner.dryRun = false

##-----------------------------------------------------
## Central Persistent Counter Store cleanup
## Retention period for saved data
##-----------------------------------------------------
CentralPcsJdbcCleaner.start = true

## like normal Unix crontab - 23:30 every Sunday
CentralPcsJdbcCleaner.cron = 30 23 * * 0

## Delete counter/sample data older than ### days (DEFAULT is 14 months)
CentralPcsJdbcCleaner.keep.days = 427

## Special log file pattern (J4Log pattern)
CentralPcsJdbcCleaner.log.file.pattern = %d - %-5p - %m%n

## If you want to test (set this to true)... deletes will NOT be done...
CentralPcsJdbcCleaner.dryRun = false

##-----------------------------------------------------
## END: Cleanup
##=====================================================
