##########################################################################################################
##########################################################################################################
## RELEASE: 2017-11-xx
##########################################################################################################
##########################################################################################################

General
-------------------------------------------------------------------------------
* Moved into one common configuration file: dbxtune.properties, instead of {product}tune.properties
  the user file is still individual for all different tools: {product}tune.user.properties
  the save file is still individual for all different tools: {product}tune.save.properties
* All CM tabs now also has a filter field where you can enter SQL syntax to filter what you want to se in the JTable
  This does NOT affect the SQL Statement issued to the server, it only filters in the local in-memory JTable
* Exception text are now stored in a recording so it can be displayed when we view the data later
* CM Dependencies has been improved: if we view a tab that depends on some else CM, the dependant CM will be refreshed...
* Warning popups on 'Full Translog', 'Oldest Open Tran', 'Lock Waits' will only popup on *new* occations (so we can dismiss them, and get a new popup next time we got problems)
* A Alarm system has been implemeted, where you can have AlarmWriters, which sends Alarms to various implementations.
  You can set Alarm Thresholds at: menu-&gt;View-&gt;Change Alarm Options... and in the Wizard 'Create record session - template file Wizard...'
  In the above dialog you can create "user defined alarm logic", which consists of java code that is compiled "on the fly" (so it's java as a script language)
  To view Active/Historical Alarm, menu-&gt;View-&gt;Alarm Active/History
  The following Alarm Writers has been created, the idea is to use them in 'no-gui' mode
	* ToFile
	* ToMail
	* ToNagiosNsca
	* ToNagiosRest
	* ToRest
	* ToSmsViaSnpp
	* ToStdout
	* ToSunMcFile
	* ToSyslog
* no-gui mode grab DBMS/SSH Password from the file $HOME/.passwd.enc (which is encrypted passwords using opensll)
* All Graphs now has from where the information originates (TabName-&gt;CmName)
* JVM Memory settings (Max Memory and Garbage Collection). This is a dialog where you can specify your own values.
* The "postpone" can be enabled/disabled with a checkbox without changing the postpone time
* Host Monitoring (on Linux) now handles different versions of for example iostat (depending on the version it delivers different output), also better internationalization for numbers and time. On startup it will print the utility version.
* Tail of log files, now has filters that you can apply to discard some records (good for RepServer and other log files, which generates a lot of output)
* HostMonitoring (for Linux), new Counter Collector - Memory Info, which gets information from /proc/meminfo

AseTune
-------------------------------------------------------------------------------
* Enhancement: Check for full log
* tooltip: show PK columns and current cell value when hovering over a table cell (this can be enabled/disabled under the "local options" button)
* tooltip: for cell content on columns 'ObjectName':
	* and content starts with '*ss' or '*sq' show the XML Execution Plan in a special GUI
	* if content is a table: show details about the table (content from sp_spaceused, sp_helpindex, and FK references)
* all CM's show how long time we have used to refresh this tab in the watermark text
* Trying to do a better job at error '2714 There is already an object named '#xxxxxxxxxx' in the database.'
  If we get this several times (drop do not work), try to do re-connect at next sample (mark the connection for re-connect)
* all cms: Tooltip on ObjectName, show detailed view (borrowed from sqlw) so we can see rowcount, data/index/LOB size, FK References etc.
* AsePlanView , has got one extra load option 'Load Name', which tries to load any '*ss####...' name from the XML Plan Cache
* Persitent Counter Store - Record a session
	* Record executed SQL Statement and SQL Text, with filters to store only if ExecutionTime, LogicalReads and PhysicalReads is greater than a specific value.
	* new Dialog where you can view SQL Statements and SQL Text saved by the Persistance Counter Store. (you can view ALL Statements or just ones within current sample)
* Show DBMS Configuration, added Configuration History tab (for ASE 16)
* Show DBMS Configuration, changed from "isql" column layout to "sqlw" layout
* Show application name in the titlebar can be enabled or disabled. Under preferences.
* CmSummary: Changed the default value of 'CmSummary.sample.lockCount' from false to true
* CmDeviceIo: local graphs added: 'Read/Write Pct' and 'Read/APF Pct'
* CmStmntCacheDetails: added 'Remark' SkewedExecPlan-Abs and SkewedExecPlan-Diff
* CmSysmon now also prints Some spinlock contention values (for example, Cachlet and Procedure cache spinlocks)
* CmActiveStatements: 
	* in ASE 16.0 SP2 PL5 and 15.7.0 SP138 the column 'PhysicalReads, LogicalReads, PagesModified' is bigint
	* in ASE 16.0 SP3 new column 'QueryOptimizationTime'
* CmSpidCpuWait: 
	* in ASE 16.0 SP3 new column 'QueryOptimizationTime'
* CmCachedObjects: PK extended to include 'OwnerUserID'
* CmOpenDatabases: Show SQL Statement and QueryPlan for oldest open transaction
* CmOpenDatabases: A better job trying to distinguage Data/UserDefined segments and Log segments
* CmOpenDatabases: in ASE 15.7 SP136 & SP64 or above; use Function spaceusage(dbid) to track a bunch of new columns, which is good to track especially LOB (text/image) column growth
      RawSpaceUsage, ReservedMb, UsedMb, UnUsedMb, DataMb, DataMbReal, IndexMb, IndexMbReal, LobMb, ReservedPages, UsedPages, UnUsedPages, DataPages, DataPagesReal, IndexPages, IndexPagesReal, LobPages, Tables, RowCountSum, OamPages, AllocationUnits
* CmProcessActivity: Background color for Worker processes
		DARK BEIGE          - SPID has Worker Processes Connected to it (Parent for a worker thread)
		BEIGE               - SPID is a Worker Processes
  added columns: AvgBytesPerSentPacket, AvgBytesPerReceivedPacket
  added column: in 16.0 SP2, sample SQL-Text using query_text(spid) if not in WaitEventID 250
  added column: ClientRemotePort - pssinfo(SP.spid, 'ipport') to get the client port used to comunicate
* CmQpMetrics: Added checkbox if we want to "flush" the statistics or not
* CmOsIostat: You can now map the device names got from iostat into your own label-name, or discard some devices...
* CmOsUptime
	* Added columns 'nproc', 'adjLoadAverage_1Min', 'adjLoadAverage_5Min', 'adjLoadAverage_15Min'
	  where nproc is number of available processing units. and adjLoadAverage* is LoadAverage/nproc to average out the LoadAverage value to a more sensible value

* New Graphs:
	* CmCachePools
		* Cache Pools Hit Rate
		* Cache Pools Utilization
		* Cache Pools Used MB
		* Cache Pools Free MB
		* Cache Pools MRU Replacement
		* Cache Pools LRU fetch-and-discard Placement
		* Cache Pools Logical Reads
		* Cache Pools Physical Reads
		* Cache Pools APF Reads
		* Cache Pools APF Reads Percent
		* Cache Pools Replacement Slide
	* CmDataCache
		* Data Caches LogicalReads
		* Data Caches PhysicalReads
		* Data Caches ApfReads
		* Data Caches Writes
	* CmOpenDatabases
		* DB Data Space left in MB
		* DB Data Space used in PCT
	* CmSpMonitorConfig
		* Procedure Cache Usage in Percent
		* Procedure Cache Usage in MB
	* CmRaLogActivity
		* RA LogScan Records Sum, per second
		* RA Log Transaction Records Sum, per second
		* RA Log CRUD Operations Sum, per second
		* RA Log Other Operations Sum, per second
		* RA CRUD Operations per DB, per second
	* CmTempdbActivity
		* TempDB Logical Reads per seconds
		* TempDB Physical Writes per seconds
		* TempDB Catalog Lock Requests per seconds
	* CmThreads
		* Tasks Executed per Thread
	* CmOsIostat
		* iostat: Wait Time(await) per Device
		* iostat: Read Wait Time(r_await) per Device
		* iostat: Write Wait Time(w_await) per Device
		* iostat: Service Time(svctm) per Device
		* iostat: Avg Queue Length(avgqu-sz) per Device
		* iostat: Busy Percent(utilPct) per Device
		* iostat: Read Operations(readsPerSec) per Device & sec
		* iostat: Write Operations(writesPerSec) per Device & sec
		* iostat: Read KB(kbReadPerSec) per Device & sec
		* iostat: Write KB(kbWritePerSec) per Device & sec
		* iostat: Avg Read KB/IO(avgReadKbPerIo) per Device
		* iostat: Avg Write KB/IO(avgWriteKbPerIo) per Device
	* CmOsMpstat
		* mpstat: CPU usage Summary
		* mpstat: CPU usage per core
	* CmOsVmstat
		* vmstat: Processes Usage
		* vmstat: Swap Usage
		* vmstat: Memory Usage
		* vmstat: Swap In/Out per sec
		* vmstat: IO Read/Write or blk-in/out per sec
	* CmOsUptime
		* uptime: Adjusted Load Average (normal load average / nproc)
	* CmOsMeminfo
		* /proc/meminfo: MemFree in MB
		* /proc/meminfo: MemAvailable in MB

IqTune
-------------------------------------------------------------------------------
* CmIqTransaction Extended PK to 'TxnID', 'VersionID', and 'ConnHandle'
* CmIqVersionUse  Extended PK to 'IQConnID', and 'VersionID'

RsTune
-------------------------------------------------------------------------------
* Check if we got stuck in "gateway mode" and do "disconnect" if it happens
* Show DBMS Configuration, added 'admin logical_status'

SqlServerTune
-------------------------------------------------------------------------------
* DBMS Configurations: 'sp_helpdb' and 'sys.databases'
* Added Host Monitoring iostat/vmstat/mpstat/uptime/meminfo for Linux (since SQL-Server now can run on Linux)
* CmWho Extended PK to 'spid', 'kpid'

MySqlTune
-------------------------------------------------------------------------------
* New tool for MySQL (only for Version 5.7 and later)

Connection Dialog
-------------------------------------------------------------------------------
* set/change the DBXTUNE_SAVE_DIR in the dialog

-------------------------------------------------------------------------------
SQL Window
* bug fix: Trying to figgure out if the "sql batch" only consisted of comments... In some cases Single Line Comments in Multiline comments, resulted in stacktrace
* Show Tooltip: as a html table for all columns on current row. Easier to view any "wide" rows. This can be enabled/disabled in the Preferences
* JDBC Meta Data Information. Added new tabs 'Columns', 'PrimaryKeys', 'BestRow', 'IndexInfo', 'FK -&gt;', 'FK &lt;-'
* JSON output in a formated way in the output window, with syntax higlightning and code folding (only if it's a single row and columns)
* Generate SQL Statements (select, insert, udate, delete) from selected text in the editor
* Generate SQL Statements (insert, udate, delete) from selected rows in the ResultSet (easy to copy records, and insert them in some other place)
* variables can be used in the SQL text. This can be used to test shell scripts that uses variables. Example: \set varName='tab1'    select * from ${varName}
* Execute SSH commands directly from the editor. Example: \ssh user@hostname "echo 'dummy'; pwd; id; date"
* Sybase ASE, Microsoft SQL-Server: If 'set statistics io on' create an extra jtable with the output and a summary (for readability)
* Cell tooltip for LOB (text/image): for image fields, lets try to figgure out the mime type and open the associated application with the content (for example PDF documents will be showed in a PDF Reader or simular)
* Tooltop: hover over a word (or selected text), if the table exists extended information will be displaied about the table. (for example: rowcount, indexes, and FK references... for views: the table referenced by the view... But it depends on what has been implemented for the product we are connected to)
* Format (selected or all) SQL text (Ctrl+Shift+F), or right click menu
* Markup all word that are equal as the word you double clicked on (trying to emulate the functionality of notepad++), which makes it easier to find other instances of a word.




#################################################################################################
#### All of the above have been transferred to: history.html
#################################################################################################
