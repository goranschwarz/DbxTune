/*******************************************************************************
 * Copyright (C) 2010-2019 Goran Schwarz
 * 
 * This file is part of DbxTune
 * DbxTune is a family of sub-products *Tune, hence the Dbx
 * Here are some of the tools: AseTune, IqTune, RsTune, RaxTune, HanaTune, 
 *          SqlServerTune, PostgresTune, MySqlTune, MariaDbTune, Db2Tune, ...
 * 
 * DbxTune is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * DbxTune is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DbxTune.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package com.asetune.sql.ddl.model;

import java.util.ArrayList;
import java.util.List;

public class Schema
{
	private Catalog _catalog;

	private String _catalogName;
	private String _schemaName;

	private List<Table>  _tables  = new ArrayList<>();
	private List<View>   _views   = new ArrayList<>();

	public Schema(String catalogName, String schemaName)
	{
		_catalogName = catalogName;
		_schemaName  = schemaName;
	}
	public Catalog getCatalog() { return _catalog; }
	public Catalog getParent()  { return _catalog; }
	
	public String getCatalogName() { return _catalogName; }
	public String getSchemaName()  { return _schemaName; }

	public void addTable(Table table) { _tables.add(table); }
	public void addView (View  view ) { _views .add(view); }

	
	
	
	//-----------------------------------------------------------------------
	//-----------------------------------------------------------------------
	// Basic methods (generated by eclipse)
	//-----------------------------------------------------------------------
	//-----------------------------------------------------------------------
	@Override
	public int hashCode()
	{
		final int prime  = 31;
		int       result = 1;
		result = prime * result + ((_catalogName == null) ? 0 : _catalogName.hashCode());
		result = prime * result + ((_schemaName == null) ? 0 : _schemaName.hashCode());
		return result;
	}

	/**
	 * Uses member 'catalogName', 'schemaName' as the equality 
	 */
	@Override
	public boolean equals(Object obj)
	{
		if ( this == obj )
			return true;
		if ( obj == null )
			return false;
		if ( getClass() != obj.getClass() )
			return false;
		Schema other = (Schema) obj;
		if ( _catalogName == null )
		{
			if ( other._catalogName != null )
				return false;
		}
		else if ( !_catalogName.equals(other._catalogName) )
			return false;
		if ( _schemaName == null )
		{
			if ( other._schemaName != null )
				return false;
		}
		else if ( !_schemaName.equals(other._schemaName) )
			return false;
		return true;
	}
}
