/* The following code was generated by JFlex 1.4.1 on 2024-12-11, 16:01 */

/*
 * Generated on 12/11/24, 4:01â€¯PM
 */
package com.dbxtune.ui.rsyntaxtextarea.modes;

import java.io.*;
import javax.swing.text.Segment;

import org.fife.ui.rsyntaxtextarea.*;


/**
 * Postgres Text Execution Plan syntax...
 */

public class PostgresTextPlanTokenMaker extends AbstractJFlexTokenMaker {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\21\1\10\1\0\1\21\1\17\22\0\1\53\1\17\1\15"+
    "\1\0\1\20\1\17\1\17\1\7\2\26\1\17\1\27\1\17\1\25"+
    "\1\23\1\17\1\4\1\62\1\16\1\16\1\63\1\63\1\6\1\6"+
    "\1\3\1\3\1\41\1\17\1\17\1\17\1\64\1\17\1\0\1\43"+
    "\1\51\1\5\1\50\1\24\1\35\1\44\1\30\1\37\1\60\1\61"+
    "\1\40\1\52\1\47\1\56\1\33\1\55\1\45\1\34\1\31\1\12"+
    "\1\1\1\42\1\22\1\54\1\57\1\26\1\11\1\26\1\17\1\2"+
    "\1\0\1\43\1\14\1\5\1\50\1\24\1\36\1\44\1\30\1\37"+
    "\1\60\1\61\1\40\1\52\1\13\1\56\1\33\1\55\1\46\1\34"+
    "\1\32\1\12\1\1\1\42\1\22\1\54\1\57\1\26\1\17\1\26"+
    "\1\17\uff81\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\3\1\2\2\1\1\1\3\1\4\3\1\1\5"+
    "\1\6\3\1\1\7\17\1\1\0\1\1\1\10\1\0"+
    "\2\10\4\1\1\3\1\11\1\0\1\3\6\1\2\5"+
    "\1\12\1\13\1\1\1\14\41\1\1\0\1\1\1\13"+
    "\1\0\1\15\5\1\1\3\1\16\2\3\1\11\1\3"+
    "\10\1\1\5\1\17\1\5\51\1\1\0\2\1\1\0"+
    "\2\1\1\20\1\3\10\1\1\5\2\1\1\21\1\0"+
    "\12\1\1\21\22\1\1\20\5\1\1\0\2\1\2\0"+
    "\1\1\1\3\7\1\1\5\1\1\1\0\1\1\1\0"+
    "\11\1\1\0\6\1\1\21\10\1\1\0\4\1\4\0"+
    "\1\1\1\3\1\0\4\1\1\5\1\1\4\0\1\1"+
    "\1\0\5\1\2\0\4\1\2\0\1\1\1\21\1\1"+
    "\1\21\1\0\1\1\2\0\1\1\4\0\1\1\3\0"+
    "\2\1\4\0\1\1\1\0\3\1\3\0\1\22\2\0"+
    "\2\1\4\0\1\1\3\0\1\20\4\0\1\21\1\1"+
    "\4\0\1\1\6\0\2\1\2\0\1\21\2\0\1\1"+
    "\102\0\1\21\37\0\1\21\15\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[479];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\65\0\152\0\237\0\324\0\u0109\0\u013e\0\u0173"+
    "\0\65\0\u01a8\0\u01dd\0\u0212\0\u0247\0\u027c\0\u02b1\0\u02e6"+
    "\0\u031b\0\65\0\u0350\0\u0385\0\u03ba\0\u03ef\0\u0424\0\u0459"+
    "\0\u048e\0\u04c3\0\u04f8\0\u052d\0\u0562\0\u0597\0\u05cc\0\u0601"+
    "\0\u0636\0\u066b\0\u06a0\0\u06d5\0\u02b1\0\u070a\0\u073f\0\u0774"+
    "\0\u07a9\0\u07de\0\u0813\0\u0848\0\65\0\u087d\0\u08b2\0\u08e7"+
    "\0\u091c\0\u0951\0\u0986\0\u09bb\0\u09f0\0\u0a25\0\u0a5a\0\65"+
    "\0\u0a8f\0\u0ac4\0\65\0\u0af9\0\u0b2e\0\u0b63\0\u0b98\0\u0bcd"+
    "\0\u0c02\0\u0c37\0\u0c6c\0\u0ca1\0\u0cd6\0\u0d0b\0\u0d40\0\u0d75"+
    "\0\u0daa\0\u0ddf\0\u0e14\0\u0e49\0\u0e7e\0\u0eb3\0\u0ee8\0\u0f1d"+
    "\0\u0f52\0\u0f87\0\u0fbc\0\u0ff1\0\u1026\0\u105b\0\u1090\0\u10c5"+
    "\0\u10fa\0\u112f\0\u1164\0\u1199\0\u11ce\0\u1203\0\u1238\0\u126d"+
    "\0\u073f\0\u12a2\0\u12d7\0\u130c\0\u1341\0\u1376\0\u13ab\0\65"+
    "\0\u13e0\0\u1415\0\u087d\0\u144a\0\u147f\0\u14b4\0\u14e9\0\u151e"+
    "\0\u1553\0\u1588\0\u15bd\0\u15f2\0\u1627\0\65\0\u165c\0\u1691"+
    "\0\u16c6\0\u16fb\0\u1730\0\u1765\0\u179a\0\u17cf\0\u1804\0\u1839"+
    "\0\u186e\0\u18a3\0\u18d8\0\u190d\0\u1942\0\u1977\0\u19ac\0\u19e1"+
    "\0\u1a16\0\u1a4b\0\u1a80\0\u1ab5\0\u1aea\0\u1b1f\0\u1b54\0\u1b89"+
    "\0\u1bbe\0\u1bf3\0\u1c28\0\u1c5d\0\u1c92\0\u1cc7\0\u1cfc\0\u1d31"+
    "\0\u1d66\0\u1d9b\0\u1dd0\0\u1e05\0\u1e3a\0\u1e6f\0\u1ea4\0\u1ed9"+
    "\0\u1f0e\0\u1f43\0\u1f78\0\u1fad\0\u1fe2\0\u2017\0\237\0\u204c"+
    "\0\u2081\0\u20b6\0\u20eb\0\u2120\0\u2155\0\u218a\0\u21bf\0\u21f4"+
    "\0\u2229\0\u225e\0\u2293\0\u22c8\0\u22fd\0\u2332\0\u2367\0\u239c"+
    "\0\u23d1\0\u2406\0\u243b\0\u2470\0\u24a5\0\u24da\0\u250f\0\u2544"+
    "\0\u2579\0\u25ae\0\u25e3\0\u2618\0\u264d\0\u2682\0\u26b7\0\u26ec"+
    "\0\u2721\0\u2756\0\u278b\0\u27c0\0\u27f5\0\u282a\0\u285f\0\u2894"+
    "\0\u28c9\0\u28fe\0\u2933\0\u2968\0\u299d\0\u29d2\0\u2a07\0\u2a3c"+
    "\0\u2a71\0\u2aa6\0\u2adb\0\u2b10\0\u2b45\0\u2b7a\0\u2baf\0\u2be4"+
    "\0\u2c19\0\u2c4e\0\u2c83\0\u2cb8\0\u2ced\0\u2d22\0\u2d57\0\u2d8c"+
    "\0\u2dc1\0\u2df6\0\u2e2b\0\u2e60\0\u2e95\0\u2eca\0\u2eff\0\u2f34"+
    "\0\u2f69\0\u2f9e\0\u2fd3\0\u3008\0\u303d\0\u3072\0\u30a7\0\u30dc"+
    "\0\u3111\0\u3146\0\u317b\0\237\0\u31b0\0\u31e5\0\u321a\0\u324f"+
    "\0\u3284\0\u32b9\0\u32ee\0\u3323\0\u3358\0\u338d\0\u33c2\0\u33f7"+
    "\0\u342c\0\u3461\0\u3496\0\u34cb\0\u3500\0\u3535\0\u356a\0\u359f"+
    "\0\u35d4\0\u3609\0\u363e\0\u3673\0\u36a8\0\u36dd\0\u3712\0\u3747"+
    "\0\u377c\0\u37b1\0\u37e6\0\u381b\0\u3850\0\u3885\0\u38ba\0\u38ef"+
    "\0\u3924\0\u3959\0\u398e\0\u39c3\0\u39f8\0\u3a2d\0\u3a62\0\u3a97"+
    "\0\u3acc\0\u3b01\0\u3b36\0\u3b6b\0\u3ba0\0\u3bd5\0\u3c0a\0\u3c3f"+
    "\0\u3c74\0\u3ca9\0\u3cde\0\u3d13\0\u3d48\0\u3d7d\0\u3db2\0\u3de7"+
    "\0\u3e1c\0\u3e51\0\u3e86\0\u3ebb\0\u3ef0\0\u3f25\0\u3f5a\0\u3f8f"+
    "\0\u3fc4\0\u3ff9\0\u402e\0\u4063\0\u4098\0\u40cd\0\u4102\0\u4137"+
    "\0\65\0\u416c\0\u41a1\0\u41d6\0\u420b\0\u4240\0\u4275\0\u42aa"+
    "\0\u42df\0\u4314\0\u4349\0\u437e\0\u43b3\0\65\0\u43e8\0\u441d"+
    "\0\u4452\0\u4487\0\65\0\u44bc\0\u44f1\0\u4526\0\u455b\0\u4590"+
    "\0\u45c5\0\u45fa\0\u462f\0\u4664\0\u4699\0\u46ce\0\u4703\0\u4738"+
    "\0\u476d\0\u47a2\0\u47d7\0\u480c\0\u4841\0\u4876\0\u48ab\0\u48e0"+
    "\0\u480c\0\u4915\0\u494a\0\u497f\0\u49b4\0\u49e9\0\u4a1e\0\u4a53"+
    "\0\u4a88\0\u4abd\0\u4af2\0\u4b27\0\u4b5c\0\u4b91\0\u4bc6\0\u4bfb"+
    "\0\u4c30\0\u4c65\0\u4c9a\0\u4ccf\0\u4d04\0\u4d39\0\u4d6e\0\u4da3"+
    "\0\u4dd8\0\u4e0d\0\u4e42\0\u4e77\0\u4eac\0\u4ee1\0\u4f16\0\u4f4b"+
    "\0\u4f80\0\u4fb5\0\u4fea\0\u501f\0\u5054\0\u5089\0\u50be\0\u50f3"+
    "\0\u5128\0\u515d\0\u5192\0\u51c7\0\u51fc\0\u5231\0\u5266\0\u529b"+
    "\0\u52d0\0\u5305\0\u533a\0\u536f\0\u53a4\0\u53d9\0\u540e\0\u5443"+
    "\0\u5478\0\u54ad\0\u54e2\0\u5517\0\u554c\0\u5581\0\u55b6\0\u55eb"+
    "\0\u5620\0\u5655\0\u568a\0\u56bf\0\u56f4\0\u5729\0\u575e\0\u5793"+
    "\0\u57c8\0\u57fd\0\u5832\0\u5867\0\u589c\0\u58d1\0\u5906\0\u593b"+
    "\0\u5970\0\u59a5\0\u59da\0\u5a0f\0\u5a44\0\u5a79\0\u5aae\0\u5ae3"+
    "\0\u5b18\0\u5b4d\0\u5b82\0\u5bb7\0\u5bec\0\u5c21\0\u5c56\0\u5c8b"+
    "\0\u5cc0\0\u4c9a\0\u5cf5\0\u5d2a\0\u5d5f\0\u5d94\0\u5dc9\0\u5dfe"+
    "\0\u5e33\0\u5e68\0\u5e9d\0\u5ed2\0\u5f07\0\u5f3c\0\u5f71";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[479];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\5\1\10"+
    "\1\11\1\2\1\12\1\13\1\14\1\15\1\5\1\2"+
    "\1\4\1\16\1\4\1\17\1\20\1\21\1\22\1\2"+
    "\1\23\2\24\1\25\1\26\2\27\1\30\1\31\1\2"+
    "\1\32\1\33\1\34\2\35\1\13\1\36\1\14\1\37"+
    "\1\16\2\4\1\40\1\4\1\41\1\4\2\5\1\2"+
    "\66\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\1\4\1\43\7\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\11\4\1\0\10\4"+
    "\1\0\3\44\2\5\1\44\1\5\2\0\4\44\1\0"+
    "\1\5\1\0\1\44\1\0\1\44\1\45\1\46\3\0"+
    "\11\44\1\0\11\44\1\0\6\44\2\5\1\0\3\44"+
    "\2\5\1\44\1\5\2\0\4\44\1\0\1\5\1\0"+
    "\1\44\1\0\1\47\1\45\1\46\3\0\11\44\1\0"+
    "\11\44\1\0\6\44\2\5\2\0\6\4\2\0\1\42"+
    "\1\50\2\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\1\4\2\51\6\4\1\0\1\4"+
    "\1\52\7\4\1\0\2\4\1\53\5\4\1\0\7\54"+
    "\1\55\1\56\1\57\53\54\1\0\6\4\2\0\1\42"+
    "\1\4\1\60\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\3\4\1\61\5\4\1\0"+
    "\5\4\1\60\3\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\62\3\0\11\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\1\63\2\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\7\4"+
    "\1\64\1\4\1\0\1\4\1\65\7\4\1\0\10\4"+
    "\1\0\10\15\1\66\1\67\3\15\1\70\47\15\21\0"+
    "\1\16\31\0\1\16\14\0\2\71\1\0\1\71\7\0"+
    "\1\71\43\0\2\71\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\72\1\0\1\4"+
    "\3\0\11\4\1\0\11\4\1\0\10\4\65\0\1\73"+
    "\1\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\74\3\0\11\4\1\0"+
    "\1\4\1\75\7\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\7\4\1\76\1\4\1\0\1\4"+
    "\1\77\1\4\2\100\4\4\1\0\2\4\1\101\5\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\10\4\1\102"+
    "\1\0\1\4\1\103\7\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\1\104\2\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\105\3\0\1\106\10\4\1\0"+
    "\1\4\1\107\7\4\1\0\2\4\1\110\5\4\2\0"+
    "\6\4\2\0\1\42\1\111\2\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\7\4\1\112"+
    "\1\4\1\0\11\4\1\0\2\4\1\113\5\4\2\0"+
    "\6\4\2\0\1\42\1\4\1\114\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\5\4\1\114\3\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\7\4\1\115\1\4\1\0"+
    "\11\4\1\0\2\4\1\116\5\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\7\4\1\117\1\4\1\0\11\4"+
    "\1\0\2\4\1\120\5\4\2\0\4\4\1\121\1\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\3\4\1\122\5\4\1\0"+
    "\2\4\1\123\6\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\1\4\1\124\1\4"+
    "\2\125\4\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\126\3\0\11\4\1\0\11\4\1\0\2\4\1\127"+
    "\5\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\130\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\131\3\0\11\4\1\0\1\4\1\132\7\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\1\133\2\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\11\4\1\0\2\4"+
    "\1\134\5\4\13\0\1\135\53\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\10\4\1\136\1\0\11\4\1\0\10\4"+
    "\1\0\7\44\2\0\4\44\1\0\1\44\1\0\1\44"+
    "\1\0\1\44\1\0\1\44\3\0\11\44\1\0\11\44"+
    "\1\0\10\44\1\0\3\44\2\137\1\44\1\137\2\0"+
    "\4\44\1\0\1\137\1\0\1\44\1\0\1\44\1\0"+
    "\1\44\1\140\1\0\1\140\11\44\1\0\11\44\1\0"+
    "\6\44\2\137\1\0\3\44\4\141\2\0\3\44\1\141"+
    "\1\0\1\141\1\0\1\44\1\0\1\44\1\0\1\141"+
    "\3\0\5\44\2\141\2\44\1\0\1\44\1\141\4\44"+
    "\2\141\1\44\1\0\6\44\2\141\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\4\4\1\142\4\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\143\3\0"+
    "\11\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\10\4\1\144\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\1\4\1\145\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\4\4\1\146\4\4\1\0\5\4\1\145\3\4"+
    "\1\0\10\4\1\0\7\147\1\150\1\0\54\147\7\0"+
    "\1\150\55\0\4\147\1\151\1\147\1\152\1\153\1\0"+
    "\1\54\1\154\3\54\1\151\13\147\1\54\3\147\1\54"+
    "\7\147\1\54\13\147\1\151\1\152\1\147\1\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\7\4\1\155\1\4\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\6\4\1\156\2\4\1\0\10\4"+
    "\2\0\1\157\5\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\4\4"+
    "\1\160\4\4\1\0\11\4\1\0\10\4\2\0\4\4"+
    "\1\161\1\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\5\4\2\162"+
    "\2\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\1\4\2\163\6\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\1\4\2\164\6\4\1\0\11\4\1\0\10\4\1\0"+
    "\11\66\1\165\3\66\1\166\53\66\1\15\1\66\2\15"+
    "\1\0\1\15\1\167\4\15\13\66\1\15\3\66\1\15"+
    "\7\66\1\15\13\66\2\15\1\66\3\44\2\71\1\44"+
    "\1\71\2\0\4\44\1\0\1\71\1\0\1\44\1\0"+
    "\1\44\1\0\1\46\3\0\11\44\1\0\11\44\1\0"+
    "\6\44\2\71\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\170\3\0"+
    "\11\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\1\4\1\171\7\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\4\4\1\172\4\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\6\4"+
    "\1\173\1\4\1\174\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\2\4\1\175\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\7\4\1\175"+
    "\1\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\7\4\1\176\1\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\1\4\2\177"+
    "\6\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\1\4\1\200\7\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\3\4\2\201\4\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\2\4\1\202\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\7\4\1\202\1\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\10\4\1\203\1\0\11\4\1\0"+
    "\1\4\1\173\6\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\1\4\1\204\7\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\10\4\1\205\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\3\4\2\206\4\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\1\4\1\207\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\5\4\1\207\3\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\1\4\1\210\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\10\4\1\211\1\0\5\4\1\210\3\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\3\4\2\212\4\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\1\4\1\213\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\4\4\1\214\4\4"+
    "\1\0\5\4\1\213\1\215\2\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\10\4"+
    "\1\216\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\11\4\1\0\2\4\1\217\5\4"+
    "\2\0\6\4\2\0\1\42\1\4\1\220\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\5\4\1\220\1\221\2\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\3\4\2\222\4\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\1\4\2\223\6\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\3\4\1\224\5\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\2\4"+
    "\1\225\6\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\1\4\2\226\6\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\0\2\4\1\227\5\4\2\0\4\4"+
    "\1\230\1\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\4\4\1\231"+
    "\4\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\1\232\10\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\10\4"+
    "\1\233\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\3\4\2\234\3\4"+
    "\1\235\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\1\4\2\236\6\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\1\4\2\237"+
    "\6\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\7\4\1\240\1\4\1\0\11\4"+
    "\1\0\10\4\4\0\4\241\5\0\1\241\1\0\1\241"+
    "\5\0\1\241\10\0\2\241\4\0\1\241\4\0\2\241"+
    "\10\0\2\241\2\0\6\4\2\0\1\42\1\242\2\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\11\4\1\0\10\4\1\0\3\44"+
    "\2\137\1\44\1\137\2\0\4\44\1\0\1\137\1\0"+
    "\1\44\1\0\1\44\1\0\1\44\3\0\11\44\1\0"+
    "\11\44\1\0\6\44\2\137\4\0\2\137\1\0\1\137"+
    "\7\0\1\137\43\0\2\137\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\1\4\2\243\6\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\244\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\10\4\1\245\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\4\4\1\246"+
    "\4\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\1\4\2\247\6\4\1\0\11\4"+
    "\1\0\10\4\1\0\7\147\1\55\1\0\60\147\1\152"+
    "\1\147\1\152\1\150\1\0\5\147\1\152\43\147\2\152"+
    "\5\147\1\54\1\147\1\54\1\150\1\0\5\147\1\54"+
    "\43\147\2\54\4\147\4\250\1\55\1\0\3\147\1\250"+
    "\1\147\1\250\5\147\1\250\10\147\2\250\4\147\1\250"+
    "\4\147\2\250\10\147\2\250\1\147\1\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\11\4\1\0\1\4"+
    "\1\251\6\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\1\4\1\252\7\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\253\3\0\11\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\1\4\2\254\6\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\11\4"+
    "\1\0\5\4\1\255\2\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\5\4\2\256\2\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\10\4\1\257\1\0\10\4\2\0\4\4\1\260"+
    "\1\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\11\4"+
    "\1\0\10\4\1\0\10\66\1\0\57\66\4\261\2\66"+
    "\1\165\2\66\1\261\1\166\1\261\5\66\1\261\10\66"+
    "\2\261\4\66\1\261\4\66\2\261\10\66\2\261\1\66"+
    "\1\0\4\4\1\262\1\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\3\4\1\263\5\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\1\264\10\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\11\4\1\265"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\247\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\10\4\1\266\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\2\4\1\267\6\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\1\4\1\270\7\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\1\4\1\271"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\5\4\1\271\3\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\1\4"+
    "\2\272\6\4\1\0\1\4\1\273\7\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\11\4\1\0\1\4\1\274\6\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\275\3\0\11\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\3\4\2\276\4\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\3\4\1\277\5\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\1\4\2\300\6\4\1\0\11\4\1\0\10\4\2\0"+
    "\4\4\1\301\1\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\1\4\1\302\7\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\1\4"+
    "\2\303\6\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\304\3\0\11\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\305\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\306\3\0\11\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\307\3\0\11\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\7\4\1\310\1\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\3\4\1\245\5\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\6\4\1\311\2\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\1\4"+
    "\2\312\6\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\11\4\1\0"+
    "\5\4\1\313\2\4\2\0\6\4\2\0\1\42\1\314"+
    "\2\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\315\3\0\11\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\3\4\2\316\4\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\1\317\10\4\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\1\320"+
    "\2\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\1\321\10\4\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\1\322"+
    "\2\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\4\4\1\323\4\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\252\3\0\11\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\2\4"+
    "\1\324\6\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\0\2\4\1\325"+
    "\5\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\326\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\3\4\1\327\5\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\1\4\1\330\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\5\4\1\330\3\4\1\0\10\4"+
    "\4\0\4\331\5\0\1\331\1\0\1\331\5\0\1\331"+
    "\10\0\2\331\4\0\1\331\4\0\2\331\10\0\2\331"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\332\3\0\11\4\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\11\4\1\0\2\4\1\333\5\4"+
    "\32\0\2\334\1\0\1\335\31\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\4\4\1\247\4\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\1\4"+
    "\2\336\6\4\1\0\11\4\1\0\10\4\1\0\3\147"+
    "\4\337\1\55\1\0\3\147\1\337\1\147\1\337\5\147"+
    "\1\337\10\147\2\337\4\147\1\337\4\147\2\337\10\147"+
    "\2\337\1\147\1\0\6\4\2\0\1\42\1\340\2\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\1\4\2\340\6\4\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\3\4\2\341\4\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\342\3\0\11\4\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\343"+
    "\3\0\11\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\344\3\0\11\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\1\4\1\345\7\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\1\346\10\4\1\0\11\4"+
    "\1\0\10\4\1\0\3\66\4\347\2\66\1\165\2\66"+
    "\1\347\1\166\1\347\5\66\1\347\10\66\2\347\4\66"+
    "\1\347\4\66\2\347\10\66\2\347\1\66\1\0\6\4"+
    "\2\0\1\42\1\350\2\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\351\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\1\4\1\352\7\4"+
    "\1\353\10\4\35\0\1\335\31\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\354\3\0\11\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\2\4"+
    "\1\355\6\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\10\4\1\356\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\1\4\1\357\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\5\4\1\357\3\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\7\4\1\360\1\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\10\4\1\361\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\1\362\2\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\4\4\1\310\1\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\363\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\10\4\1\364\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\11\4\1\365\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\1\4\2\366\6\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\10\4\1\367"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\370\3\0\11\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\7\4\1\371\1\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\3\4\2\372\4\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\3\4\2\310\4\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\373\1\0\1\4\3\0\11\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\1\4"+
    "\2\374\6\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\11\4\1\0"+
    "\2\4\1\375\5\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\1\247\10\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\376\3\0\11\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\1\4\1\377\7\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\1\4\1\u0100\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\5\4\1\u0100\3\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\u0101\3\0\11\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\u0102\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\3\4\1\u0103\5\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\u0104\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\10\4\1\310\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\11\4\1\u0105\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\u0106"+
    "\3\0\11\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\3\4\2\u0107"+
    "\4\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\3\4\2\u0108\4\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\1\u0109\2\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\u010a\10\4\4\0"+
    "\4\u010b\5\0\1\u010b\1\0\1\u010b\5\0\1\u010b\10\0"+
    "\2\u010b\4\0\1\u010b\4\0\2\u010b\10\0\2\u010b\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\4\4\1\173\4\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\10\4\1\173\1\0\10\4"+
    "\3\0\1\u010c\67\0\1\u010d\60\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\3\4\2\u010e\4\4\1\0"+
    "\10\4\1\0\3\147\4\u010f\1\55\1\0\3\147\1\u010f"+
    "\1\147\1\u010f\5\147\1\u010f\10\147\2\u010f\4\147\1\u010f"+
    "\4\147\2\u010f\10\147\2\u010f\1\147\1\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\374\3\0\11\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\11\4\1\u0110\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\6\4\1\u0111\2\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\1\4\2\u0112"+
    "\6\4\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\3\4\2\u0112\4\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\3\4\1\u0113\5\4\1\0\11\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\u0114\3\0\11\4\1\0\11\4"+
    "\1\0\10\4\1\0\3\66\4\u0115\2\66\1\165\2\66"+
    "\1\u0115\1\166\1\u0115\5\66\1\u0115\10\66\2\u0115\4\66"+
    "\1\u0115\4\66\2\u0115\10\66\2\u0115\1\66\1\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\1\4\2\u0116\6\4\1\0"+
    "\11\4\1\0\10\4\36\0\2\u0117\27\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\2\4\1\123\6\4"+
    "\1\0\10\4\6\0\1\u0118\32\0\1\u0119\25\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\11\4\1\u011a"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\u011b\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\u011c\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\7\4\1\u011d\1\4"+
    "\1\0\11\4\1\0\10\4\2\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\1\4\1\u011e\7\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\10\4"+
    "\1\u011f\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\u0120\3\0\11\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\6\4\1\u0121\2\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\173\3\0\11\4\1\0\11\4\1\0\10\4"+
    "\53\0\1\u0122\6\0\1\u0123\4\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\7\4\1\u0124\1\4\1\0\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\7\4"+
    "\1\u0125\1\4\1\0\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\3\4\2\u0126"+
    "\4\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\2\4\1\u0127\6\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\11\4\1\u0128\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\11\4\1\u0129\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\1\u012a\10\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\3\4\2\u012b\4\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\10\4\1\u012c\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\6\4\1\374\2\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\2\4\1\156\6\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\3\4\2\u012d\4\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\1\4\1\352\7\4\1\u012e\10\4\2\0"+
    "\4\4\1\u012f\1\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\0\10\4\46\0\2\u0130\17\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\11\4\1\u0131"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\0\1\u0132\7\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\7\4\1\210\1\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\1\4\2\u0126\6\4\1\0\11\4\1\0\10\4\36\0"+
    "\2\u0133\31\0\4\4\5\0\1\4\1\0\1\4\5\0"+
    "\1\4\10\0\2\4\4\0\1\4\4\0\2\4\10\0"+
    "\2\4\25\0\1\u0134\30\0\1\u0135\52\0\1\u0136\22\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\1\4"+
    "\1\u0137\7\4\1\0\10\4\1\0\3\147\4\54\1\55"+
    "\1\0\3\147\1\54\1\147\1\54\5\147\1\54\10\147"+
    "\2\54\4\147\1\54\4\147\2\54\10\147\2\54\1\147"+
    "\24\0\1\u0138\41\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\u0139\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\4\4\1\u0126\4\4\1\0\11\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\u013a\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\4\4\1\u013b\4\4\1\0\11\4"+
    "\1\0\10\4\1\0\3\66\4\15\2\66\1\165\2\66"+
    "\1\15\1\166\1\15\5\66\1\15\10\66\2\15\4\66"+
    "\1\15\4\66\2\15\10\66\2\15\1\66\1\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\7\4\1\u013c\1\4\1\0"+
    "\11\4\1\0\10\4\25\0\1\u013d\116\0\1\u013e\32\0"+
    "\1\u013f\75\0\2\u0140\27\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\3\4\2\u0141\4\4\1\0\10\4"+
    "\46\0\2\u0142\17\0\6\4\2\0\1\42\1\4\1\u0143"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\5\4\1\u0143\3\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\10\4"+
    "\1\374\1\0\11\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\u0144\3\0\11\4\1\0\11\4\1\0\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\3\4\2\u0145\4\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\11\4\1\u0146\10\4"+
    "\25\0\1\u0147\64\0\1\u0148\41\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\0\2\4\1\u0127"+
    "\5\4\2\0\6\4\2\0\1\42\3\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\3\0\11\4"+
    "\1\0\11\4\1\0\3\4\1\340\4\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\u0149\11\4\1\0"+
    "\10\4\2\0\6\4\2\0\1\42\1\4\1\173\1\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\5\4\1\173\3\4\1\0\10\4"+
    "\13\0\1\u014a\57\0\1\u0118\26\0\1\335\21\0\1\u014b"+
    "\7\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\1\4\1\u014c\7\4\1\0\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\4\4\1\u014d\4\4\1\0\11\4"+
    "\1\u014e\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\u014f\10\4\2\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\11\4\1\u0150\10\4"+
    "\62\0\1\u0151\4\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\0\5\4\1\u0152\2\4\25\0"+
    "\1\u0153\45\0\1\u0118\27\0\2\u0154\4\0\1\u0155\22\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\u0156\11\4"+
    "\1\u0157\10\4\40\0\1\u0158\40\0\1\u0159\33\0\1\u0159"+
    "\27\0\1\u015a\65\0\1\u015b\33\0\1\u015b\16\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\7\4\1\u015c\1\4\1\0"+
    "\11\4\1\0\10\4\23\0\1\u015d\102\0\1\u015e\54\0"+
    "\1\u015f\6\0\1\u0160\26\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\u0156\11\4\1\0\10\4\2\0\6\4"+
    "\2\0\1\42\3\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\3\0\11\4\1\0\11\4\1\0"+
    "\2\4\1\u0161\5\4\32\0\2\u0162\45\0\1\u0163\33\0"+
    "\1\u0163\52\0\2\u0164\40\0\1\u0165\53\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\11\4\1\u0166\10\4"+
    "\13\0\1\u0167\53\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\2\4\1\u0168\6\4\1\0\10\4\2\0"+
    "\6\4\2\0\1\42\3\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\10\4\1\u0169\1\0"+
    "\11\4\1\0\10\4\2\0\6\4\2\0\1\42\3\4"+
    "\1\0\1\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\3\0\11\4\1\0\11\4\1\0\1\173\7\4\31\0"+
    "\1\u016a\65\0\2\u016b\106\0\1\u016c\23\0\1\u016d\33\0"+
    "\1\u016d\30\0\1\u016e\33\0\1\u016e\16\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\2\4\1\u016f\6\4"+
    "\1\0\10\4\2\0\6\4\2\0\1\42\3\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\1\0\1\4\3\0"+
    "\11\4\1\0\11\4\1\u0170\10\4\4\0\2\u0171\1\0"+
    "\1\u0171\7\0\1\u0171\43\0\1\u0172\1\u0171\32\0\2\u0173"+
    "\104\0\1\u0174\36\0\1\u0175\41\0\6\4\2\0\1\42"+
    "\3\4\1\0\1\4\1\0\1\4\1\0\1\4\1\0"+
    "\1\4\3\0\11\4\1\0\11\4\1\u0176\10\4\53\0"+
    "\1\u0177\24\0\1\u0178\105\0\1\u0179\43\0\1\u017a\112\0"+
    "\1\u017b\50\0\1\u017c\103\0\1\u017d\22\0\6\4\2\0"+
    "\1\42\1\4\1\310\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\1\0\1\4\3\0\11\4\1\0\5\4"+
    "\1\310\3\4\1\0\10\4\25\0\1\u017e\116\0\1\u017f"+
    "\32\0\1\u0180\53\0\1\u0181\33\0\1\u0181\16\0\6\4"+
    "\2\0\1\42\1\4\1\u0168\1\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\5\4\1\u0168\3\4\1\0\10\4\6\0\1\u0182\127\0"+
    "\1\u0171\45\0\2\u0183\45\0\1\u0184\33\0\1\u0184\52\0"+
    "\2\u0185\41\0\1\u0186\33\0\1\u0186\16\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\11\4\1\u0186\10\4"+
    "\2\0\6\4\2\0\1\42\3\4\1\0\1\4\1\0"+
    "\1\4\1\0\1\4\1\0\1\4\3\0\11\4\1\0"+
    "\11\4\1\u0187\10\4\40\0\1\u0188\55\0\1\u0189\75\0"+
    "\1\u0149\62\0\1\u018a\65\0\1\u018b\25\0\6\4\2\0"+
    "\1\42\3\4\1\0\1\4\1\0\1\4\1\0\1\4"+
    "\1\0\1\4\3\0\11\4\1\0\2\4\1\374\6\4"+
    "\1\0\10\4\34\0\1\u018c\4\0\1\u018d\30\0\1\u0171"+
    "\11\0\1\u0171\22\0\1\u0149\20\0\2\u0171\40\0\1\u018e"+
    "\51\0\1\u018f\114\0\1\u0171\15\0\1\u0118\135\0\1\u0190"+
    "\46\0\1\u0191\57\0\1\u0192\65\0\1\u0193\61\0\2\u0194"+
    "\77\0\2\u0195\56\0\1\u0196\31\0\1\u0197\135\0\1\u0198"+
    "\51\0\1\u0199\71\0\1\u019a\44\0\1\u019b\107\0\1\u019c"+
    "\16\0\1\u019d\135\0\1\u019e\37\0\2\u019f\46\0\1\u01a0"+
    "\13\0\1\u01a1\3\0\1\u01a2\2\0\1\u01a3\11\0\1\u01a0"+
    "\44\0\2\u0156\110\0\1\u01a4\63\0\1\u01a5\63\0\1\u01a6"+
    "\50\0\1\u01a7\67\0\1\u01a8\73\0\1\u01a9\57\0\2\u01aa"+
    "\17\0\1\u01ab\123\0\1\u0183\50\0\1\u01ac\103\0\1\u01ad"+
    "\45\0\1\u01ae\104\0\1\u01af\57\0\1\u01b0\37\0\1\u01b1"+
    "\105\0\1\u01b2\64\0\1\u01a6\55\0\1\u01b3\64\0\1\u01b4"+
    "\120\0\1\u01b5\35\0\2\u01b6\77\0\2\u015b\55\0\1\u01b7"+
    "\64\0\1\u01b8\70\0\1\u01b9\45\0\1\u01ba\53\0\1\u01bb"+
    "\33\0\1\u01bb\65\0\1\u016c\26\0\1\u01bc\125\0\1\265"+
    "\54\0\1\u01bd\33\0\1\u01be\76\0\1\u0156\104\0\1\u01bf"+
    "\44\0\1\u01c0\53\0\1\u01c1\33\0\1\u01c1\61\0\1\u01c2"+
    "\65\0\2\u0171\72\0\1\u015b\41\0\2\u01af\63\0\2\u01c3"+
    "\105\0\1\u01c4\33\0\1\u01a6\76\0\1\u0171\106\0\1\u01c5"+
    "\45\0\1\u01c6\77\0\1\u01bc\43\0\2\u01c7\66\0\1\u01c8"+
    "\105\0\1\u01a6\57\0\1\u01c9\40\0\1\u0171\53\0\1\u01ca"+
    "\33\0\1\u01ca\30\0\1\u01cb\33\0\1\u01cb\41\0\1\u015b"+
    "\110\0\1\u01cc\64\0\1\u015b\40\0\1\u01cd\64\0\1\u01ce"+
    "\100\0\1\u0119\4\0\2\u01cf\55\0\1\u0136\103\0\1\u01d0"+
    "\60\0\1\u01d1\42\0\1\u01d2\60\0\1\u01d3\53\0\1\u01d4"+
    "\33\0\1\u01d4\22\0\1\u01d5\132\0\1\u01d6\52\0\1\u0156"+
    "\73\0\1\u0156\53\0\1\u01d7\40\0\1\u01a6\33\0\1\u01a6"+
    "\60\0\1\u01d8\43\0\1\u01d9\66\0\1\u0163\70\0\1\u01d4"+
    "\50\0\1\u01da\34\0\1\u01da\57\0\1\u01db\53\0\1\u01dc"+
    "\104\0\1\u01dd\65\0\1\u01de\40\0\1\u0164\107\0\1\u01df"+
    "\45\0\1\335\21\0\1\u014b\61\0\1\u010a\41\0\1\u015f"+
    "\34\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[24486];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\6\1\1\11\10\1\1\11\17\1\1\0"+
    "\2\1\1\0\7\1\1\11\1\0\11\1\1\11\2\1"+
    "\1\11\41\1\1\0\2\1\1\0\7\1\1\11\15\1"+
    "\1\11\52\1\1\0\2\1\1\0\20\1\1\0\43\1"+
    "\1\0\2\1\2\0\13\1\1\0\1\1\1\0\11\1"+
    "\1\0\17\1\1\0\4\1\4\0\2\1\1\0\6\1"+
    "\4\0\1\1\1\0\5\1\2\0\4\1\2\0\4\1"+
    "\1\0\1\1\2\0\1\1\4\0\1\1\3\0\2\1"+
    "\4\0\1\1\1\0\3\1\3\0\1\11\2\0\2\1"+
    "\4\0\1\1\3\0\1\11\4\0\1\11\1\1\4\0"+
    "\1\1\6\0\2\1\2\0\1\1\2\0\1\1\102\0"+
    "\1\1\37\0\1\1\15\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[479];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */


	/**
	 * Constructor.  This must be here because JFlex does not generate a
	 * no-parameter constructor.
	 */
	public PostgresTextPlanTokenMaker() {
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param tokenType The token's type.
	 * @see #addToken(int, int, int)
	 */
	private void addHyperlinkToken(int start, int end, int tokenType) {
		int so = start + offsetShift;
		addToken(zzBuffer, start,end, tokenType, so, true);
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param tokenType The token's type.
	 */
	private void addToken(int tokenType) {
		addToken(zzStartRead, zzMarkedPos-1, tokenType);
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param tokenType The token's type.
	 * @see #addHyperlinkToken(int, int, int)
	 */
	private void addToken(int start, int end, int tokenType) {
		int so = start + offsetShift;
		addToken(zzBuffer, start,end, tokenType, so, false);
	}


	/**
	 * Adds the token specified to the current linked list of tokens.
	 *
	 * @param array The character array.
	 * @param start The starting offset in the array.
	 * @param end The ending offset in the array.
	 * @param tokenType The token's type.
	 * @param startOffset The offset in the document at which this token
	 *        occurs.
	 * @param hyperlink Whether this token is a hyperlink.
	 */
	public void addToken(char[] array, int start, int end, int tokenType,
						int startOffset, boolean hyperlink) {
		super.addToken(array, start,end, tokenType, startOffset, hyperlink);
		zzStartRead = zzMarkedPos;
	}


	/**
	 * {@inheritDoc}
	 */
	public String[] getLineCommentStartAndEnd(int languageIndex) {
		return null;
	}


	/**
	 * Returns the first token in the linked list of tokens generated
	 * from <code>text</code>.  This method must be implemented by
	 * subclasses so they can correctly implement syntax highlighting.
	 *
	 * @param text The text from which to get tokens.
	 * @param initialTokenType The token type we should start with.
	 * @param startOffset The offset into the document at which
	 *        <code>text</code> starts.
	 * @return The first <code>Token</code> in a linked list representing
	 *         the syntax highlighted text.
	 */
	public Token getTokenList(Segment text, int initialTokenType, int startOffset) {

		resetTokenList();
		this.offsetShift = -text.offset + startOffset;

		// Start off in the proper state.
		int state = Token.NULL;
		switch (initialTokenType) {
			/* No multi-line comments */
			/* No documentation comments */
			default:
				state = Token.NULL;
		}

		s = text;
		try {
			yyreset(zzReader);
			yybegin(state);
			return yylex();
		} catch (IOException ioe) {
			ioe.printStackTrace();
			return new TokenImpl();
		}

	}


	/**
	 * Refills the input buffer.
	 *
	 * @return      <code>true</code> if EOF was reached, otherwise
	 *              <code>false</code>.
	 */
	private boolean zzRefill() {
		return zzCurrentPos>=s.offset+s.count;
	}


	/**
	 * Resets the scanner to read from a new input stream.
	 * Does not close the old reader.
	 *
	 * All internal variables are reset, the old input stream 
	 * <b>cannot</b> be reused (internal buffer is discarded and lost).
	 * Lexical state is set to <tt>YY_INITIAL</tt>.
	 *
	 * @param reader   the new input stream 
	 */
	public final void yyreset(Reader reader) {
		// 's' has been updated.
		zzBuffer = s.array;
		/*
		 * We replaced the line below with the two below it because zzRefill
		 * no longer "refills" the buffer (since the way we do it, it's always
		 * "full" the first time through, since it points to the segment's
		 * array).  So, we assign zzEndRead here.
		 */
		//zzStartRead = zzEndRead = s.offset;
		zzStartRead = s.offset;
		zzEndRead = zzStartRead + s.count - 1;
		zzCurrentPos = zzMarkedPos = zzPushbackPos = s.offset;
		zzLexicalState = YYINITIAL;
		zzReader = reader;
		zzAtBOL  = true;
		zzAtEOF  = false;
	}




  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public PostgresTextPlanTokenMaker(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public PostgresTextPlanTokenMaker(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 204) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public org.fife.ui.rsyntaxtextarea.Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = zzLexicalState;


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 4: 
          { addNullToken(); return firstToken;
          }
        case 19: break;
        case 14: 
          { addToken(Token.LITERAL_CHAR);
          }
        case 20: break;
        case 6: 
          { addToken(Token.WHITESPACE);
          }
        case 21: break;
        case 13: 
          { addToken(Token.LITERAL_NUMBER_HEXADECIMAL);
          }
        case 22: break;
        case 15: 
          { addToken(Token.ERROR_STRING_DOUBLE);
          }
        case 23: break;
        case 11: 
          { addToken(Token.LITERAL_NUMBER_FLOAT);
          }
        case 24: break;
        case 17: 
          { addToken(Token.RESERVED_WORD);
          }
        case 25: break;
        case 7: 
          { addToken(Token.SEPARATOR);
          }
        case 26: break;
        case 1: 
          { addToken(Token.IDENTIFIER);
          }
        case 27: break;
        case 18: 
          { addToken(Token.FUNCTION);
          }
        case 28: break;
        case 3: 
          { addToken(Token.ERROR_CHAR); addNullToken(); return firstToken;
          }
        case 29: break;
        case 5: 
          { addToken(Token.ERROR_STRING_DOUBLE); addNullToken(); return firstToken;
          }
        case 30: break;
        case 16: 
          { addToken(Token.DATA_TYPE);
          }
        case 31: break;
        case 9: 
          { addToken(Token.ERROR_CHAR);
          }
        case 32: break;
        case 10: 
          { addToken(Token.LITERAL_STRING_DOUBLE_QUOTE);
          }
        case 33: break;
        case 8: 
          { addToken(Token.ERROR_NUMBER_FORMAT);
          }
        case 34: break;
        case 2: 
          { addToken(Token.LITERAL_NUMBER_DECIMAL_INT);
          }
        case 35: break;
        case 12: 
          { addToken(Token.OPERATOR);
          }
        case 36: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            switch (zzLexicalState) {
            case YYINITIAL: {
              addNullToken(); return firstToken;
            }
            case 480: break;
            default:
            return null;
            }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }
}
